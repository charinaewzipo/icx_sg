<?php 
		header("Content-type: text/html;charset=utf-8");
		ini_set('post_max_size', '40M');
		ini_set('upload_max_filesize', '40M');
		ini_set('memory_limit','2048M');
?>
<?php require_once("class/OutboundGenesys.php")?>
<?php require_once("dbconn.php")?>
<?php require_once("util.php")?> 
<?php require_once("wlog.php")?>
<?php 

	if(isset($_POST['action'])){ 
		
		   switch( $_POST['action']){
		   	
		   	  		//query call list
		   			case "search" : search(); break; //search calllist detail
		   			case "query" : query(); break;
		   			case "detail" : detail(); break;
		   			case "detailMaintain" : detailMaintain(); break;
					//detail export genesys
					case "detailExport" : detailExport(); break;
		   			case "updatelist" : updatelist(); break;
		   			case "delete" : deleteList(); break;
		   			//Export Genesys
					case "genesysexport" : genesysExport(); break;
					case "genesysclear" : genesysClear(); break;

		   			//upload excel file
					case "upload" : upload(); break;							//setp1
					case "afterupload" : afterUpload(); break;			//step1.1
					case "mappingfield" : mappingfield(); break;		//step2
					
					//after press import btn
					case "importtodb" : importtodb(); break;			//step3
					case "match_cmp" : match_cmp(); break;			//step4
					case "save_cmpmap" : save_cmpmap(); break; //save last step
								
					//check list name is duplicate
					case "checklname" : check_listname(); break;
					
					//dynamic field (maintenance )
					case "dynsearch" : dynsearch(); break;
					case "dynsave" : dynsave(); break; //save maintenance
							
					//download file after upload
					case "newlistdw" : exportList('newlist'); break;
					case "badlistdw" : exportList('badlist'); break;
					case "duplistdw" : exportList('duplist');break;
					case "dupdbdw" : exportlist('dupdb'); break; 
					
		   }
		   
		   /*
         switch( $_POST['actions']){
         		
         		//case "init" : init(); break;
         		// create list 
		        case "query"  : query(); break;
				case "detail"  : detail(); break;
				case "save"    : save(); break;
				
				//delete list
				case "delete"  : delete(); break;
				case "queryimportlist" : query_importList(); break;
				
				case "viewlist" : query_viewlist(); break;
				case "viewlist_export" : export_viewlist(); break;
				
				//map between excel and database 
				//move from import_process to call list process
				case "mapfield" : mappingfield(); break;
				
         }
         */
         
	}
	
	function dynsave(){
		
			$tmp = json_decode( $_POST['data'] , true); 
			$dbconn = new dbconn;  
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
			
	  		//delete
		   if( isset($_POST['d'])){
			      $data = json_decode( $_POST['d'] , true);   
			      $sql = "DELETE FROM t_calllist WHERE calllist_id IN ( ". $data['data'].") ";
			      wlog("[callList_process][dynsave] delete sql : ".$sql);
		    	 $dbconn->executeUpdate($sql); 
		    }
		  
		   //get field in each import id for insert or update
		    $sql = " SELECT field_name ".
						" FROM t_import_list_field ".
						" WHERE import_id = ".$tmp['impid'].
						" AND field_name != '0' ".
						" ORDER BY caption_index";
		    
		     $result = $dbconn->executeQuery($sql);
	 		 $fields = array();
			 while($rs=mysql_fetch_array($result)){
				array_push( $fields , $rs['field_name']);
			}
		
			//ststem field = calllist_id , import_id , status , create_date , create_user , manual_list = 1 , 
		    wlog(" fields : ".implode(',' , $fields));
		/*    
		    import_id = $tmp['impid']
		    `status` = 1;
		    create_date = NOW() ,
		    create_user = $tmp['uid']
		    manual_list = 1
		    */
		
		    wlog("field length : ".count($fields));
		    
		   $system_field = ' ,`status`, create_date, create_user, manual_list , import_id ';
		    //insert 
		  //it ok but very complicate it risk to err !!!
	      if( isset($_POST['n']) ){
		     $data = json_decode( $_POST['n'] , true); 
		     $size = count( $data['data']) ;
		     
		    // wlog( $data['data'][0]['f1'] );
		    wlog( "new row size : ".$size);
		    $sql = "";
		     for( $i=0 ; $i < $size ; $i++){
		     		$length = count( $data['data'][$i] );
		     		wlog("field length : ".$length);
		     		$sql = "INSERT INTO t_calllist ( ".implode(',' , $fields).$system_field.") VALUES ( ";
		     		for( $j=0; $j < $length ; $j++ ){
		     			wlog(" field : ".$data['data'][$i]['f'.$j] );
		     			
		     			$sql = $sql." ". dbformat($data['data'][$i]['f'.$j]). " , ";
		     		}
		     		//insert system field data
		     	$sql = $sql." NOW() , ".dbNumberFormat($tmp['uid']).", 1 , ".dbNumberFormat($tmp['impid'])." ) ";
		     	
	
		     	
			  		wlog("[callList_process][dynsave] insert sql : ".$sql);
					$dbconn->executeUpdate($sql); 
			 }//end loop for insert;
	       }//end if 
	       
		//update		
	   if( isset($_POST['u']) ){
        $data = json_decode( $_POST['u'] , true); 
        $sql = "";
        	$wh = "";
        	
        	    for( $i=0 ; $i < count( $data['data'] ) ; $i++){	
        	
    				    $sql = " UPDATE t_calllist SET ";
			          for( $j=0 ; $j < count( $fields ) ; $j++){
			       					$sql = $sql.$fields[$j]." = ".dbformat($data['data'][$i]['f'.$j])." , ";
			       				
			          }
            		 	$sql = $sql." update_date = now() , ".  
											" update_user = ".dbNumberFormat($tmp['uid'])." ".
            		 				 		" WHERE calllist_id = ". dbNumberFormat($data['data'][$i]['id']). "  ";
             	
        	    }//end loop update
   /*
	    for( $i=0 ; $i < count( $data['data'] ) ; $i++){
	  
	    		$length = count( $data['data'][$i] );
	    	
	    		for( $j=0; $j < $length ; $j++ ){
		     			wlog(" field : ".$data['data'][$i]['f'.$j] );
		     			
		     			if( $j ==0 ){
		     				$wh = " WHERE calllist_id = ". dbformat($tmp['data'][$i]['id']). "  ";
		     			}else{
		     					$sql = $sql.$fields[$j]." =  ". dbformat($data['data'][$i]['f'.$j]). " , ";
		     			}
		  
		     		}
		     		
		     	//insert system field data
		 
				
	    	
	    	/*
		   	$sql = "UPDATE t_po_item SET ".
						" item_seq =  ". dbformat($tmp['data'][$i]['item']). " ,".
						" item_desc = ". dbformat($tmp['data'][$i]['desc']). " ,".
						" partno = ". dbformat($tmp['data'][$i]['pNo']). " ,".
						" qty =  ". dbformat($tmp['data'][$i]['qty']). " ,".
						" unit_price =  ". dbformat($tmp['data'][$i]['uPrice']). " ,".
						" update_date = now() , ".  
						" update_user = 1 ".  
						" WHERE rowid = ". dbformat($tmp['data'][$i]['id']). "  ";
					*/
		   		    wlog("[callList_process][dynsave] update sql : ".$sql);
		   			$dbconn->executeUpdate($sql); 
	
	    //   }//end loop for update;  
	   }
	   
	    $dbconn->dbClose(); 
	    $res = array("result"=>"success");
		echo json_encode($res);   
	
		
	}
	

	//call list detail dynamic search field
	function dynsearch(){
		
		//dynamic search field
		
		//dynamic condition 
		$sql = " SELECT FROM t_calllist ".
					" WHERE ";
		
		
		
		
	}
	
	function check_listname(){
		
			$tmp = json_decode( $_POST['data'] , true); 
					
			$dbconn = new dbconn;  
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
		      $sql = " SELECT list_name FROM t_import_list WHERE list_name = ".dbformat($tmp['lname'])." ";
		  
		     $result = $dbconn->executeQuery($sql);
	 		 $count = 0;
			 if($rs=mysql_fetch_array($result)){
				$sql = "false";
			}else{
				$sql = "pass";
			}
		     
			$dbconn->dbClose(); 
		    $res = array("data"=>$sql );
			echo json_encode($res);   
		
	}
	

	function match_cmp(){
		
			$tmp = json_decode( $_POST['data'] , true); 
			$dbconn = new dbconn;  
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
		     $sql = " SELECT campaign_id , campaign_name ".
		     			" FROM t_campaign ".
		     			" WHERE `status` != 1 ";
		     wlog("[callList_process][match_cmp] find campaign sql : ".$sql);
		    	
		     //campaign box on right pane
		     $result = $dbconn->executeQuery($sql);
	 		 $count = 0;
			 while($rs=mysql_fetch_array($result)){
					$tmp1[$count] = array(
						"cmpid" => nullToEmpty($rs['campaign_id']),
						"cmpname" => nullToEmpty($rs['campaign_name']),
						"impid" => nullToEmpty($rs['import_id ']),
						"lname" => nullToEmpty($rs['list_name']),
						"exist" => nullToEmpty($rs['is_exists'])
					);					
					$count++;
			}
		     
			if($count==0){
				$tmp1 = array("result"=>"empty");
			}
			
			//new list box on left pane
			 		
			$sql = " SELECT import_id, list_name , list_detail ". 
						" FROM t_import_list ".
						" WHERE import_key = ".dbformat($tmp['key'])." ";
			
			wlog("[callList_process][match_cmp] find new list sql : ".$sql);
			
		     $result = $dbconn->executeQuery($sql);
	 		 $count = 0;
	
			 while($rs=mysql_fetch_array($result)){
					$tmp2[$count] = array(
						"impid" => nullToEmpty($rs['import_id']),
						"lname" => nullToEmpty($rs['list_name']),
						"ldtl" => nullToEmpty($rs['list_detail '])
					);					
					$count++;
			}
		
			if($count==0){
				$tmp2 = array("result"=>"empty");
			}
			
			$dbconn->dbClose(); 
		    $res = array("cmp"=>$tmp1, "newlist" => $tmp2 );
			echo json_encode($res);   
		
	}
	
	
	function save_cmpmap(){
		
			$tmp = json_decode( $_POST['data'] , true); 
			$cmpid = json_decode( $_POST['cmpid'] , true); 
			$uncmpid = json_decode( $_POST['uncmpid'] , true); 
			  		
			$dbconn = new dbconn;  
	        $dbconn->createConn();
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
				  //not select campaign
		    	  //if found delete it ( it mean user uncheck cmp after they checked ( user can change their mind ));
		    	 $size = count($uncmpid);
			  	 for( $i=0; $i< $size; $i++){
			  	 	   $sql = "SELECT campaign_id FROM t_campaign_list WHERE campaign_id = ". dbNumberFormat($uncmpid[$i])." AND import_id = ".dbNumberFormat($_POST['impid'])." ";
			  	 	    wlog( "[callList_process][save_cmpmap] find UNmatch : ".$sql );
		    	 	 	$result = $dbconn->executeQuery($sql);
		    	 	    if($rs=mysql_fetch_array($result)){
		    	 	    	//if found delete it ( it mean user uncheck cmp after they checked ( user can change their mind ));
		    	 	    		$sql = " DELETE FROM t_campaign_list WHERE import_id = ".dbNumberFormat($_POST['impid'])." AND import_id = ".dbNumberFormat($_POST['impid'])." ";
		    	 	    		wlog( "[callList_process][save_cmpmap] delete match : ".$sql );
								$dbconn->executeUpdate($sql);  	
		    	 	    }
			  	  }
		  
		     	//insert match campaign
		    	$size = count($cmpid);
		    	 for( $i=0; $i< $size; $i++){
		    	 	
		    	 	    $sql = "SELECT campaign_id FROM t_campaign_list WHERE campaign_id = ". dbNumberFormat($cmpid[$i])." AND import_id = ".dbNumberFormat($_POST['impid'])." ";
		    	 	    
		    	 		 wlog( "[callList_process][save_cmpmap] find match : ".$sql );
		    	 	 	$result = $dbconn->executeQuery($sql);
		    	 	    if($rs=mysql_fetch_array($result)){
		  
		    	 	    }else{
		    	 	    	$sql = "INSERT INTO t_campaign_list ( campaign_id , import_id , join_date , join_user  ) VALUES (".
									" ".dbNumberFormat($cmpid[$i])." , ".
									" ".dbNumberFormat($_POST['impid'])." , ".
									" NOW() , ".dbNumberFormat($tmp['uid'])." ) "; 
								wlog( "[callList_process][save_cmpmap] insert match : ".$sql );
								$dbconn->executeUpdate($sql);  	
		    	 	    }
		    	 	
		    	 }
		    	 
		    	 
			 $res = array("result"=>"success");
			 echo json_encode($res);  
		 
		    	/*
		    	    $n = json_decode($_POST['n'],true);
		    	 
		    	    for( $i=0; $i< count($n); $i++){
		    	    	$sql = "INSERT INTO t_campaign_list ( campaign_id , import_id , join_date , join_user  ) VALUES (".
									" ".dbNumberFormat($tmp['cmpid'])." , ".
									" ".dbNumberFormat($n[$i])." , ".
									" NOW() , ".dbNumberFormat($tmp['uid'])." ) "; 
						wlog( $sql );  	
						$res = $dbconn->executeUpdate($sql);
				 
		    	    }
		    	    
		    }
		*/
		
	}
	
	
	//detail page update list name n detail
	function updatelist(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	
	     //check status before update
	     $is_effected = 0;
	     $sql = "SELECT `status` FROM t_import_list WHERE import_id = ".dbNumberFormat($tmp['impid']);
	     $result = $dbconn->executeQuery($sql);
		 if($rs=mysql_fetch_array($result)){
		 	//if status before upate is 1 ( available don't run effected command )
		 	//if status before update is 4 ( expired run effect command too )
		 	if($rs['status']==4){
		 		$is_effected = 1;
		 	}
	
		 }
		 
		 
		 //then update
	      $sql = "UPDATE t_import_list SET ".
				" list_name = ".dbformat($tmp['calllist_name']).",".
				" list_detail =  ".dbformat($tmp['calllist_detail']).",".
     			" list_comment = ".dbformat( $tmp['calllist_note'] ).", ".
     			" `status` = ".dbNumberFormat(  $tmp['calllist_status'] )." , ".
     		    " update_date =NOW(), ".
			    "update_user =".dbNumberFormat( $tmp['uid'])." ".
				" WHERE import_id = ".dbNumberFormat($tmp['impid']);
	     
	     wlog("[callList_process][updatelist] update sql : ".$sql );
	     $dbconn->executeUpdate($sql);
	     
	     //check if list expire update call list status to expire too
	     if( $tmp['calllist_status']  == 4){
	     	
	     	    //step1 check campaign use this import id
			     $sql = " SELECT campaign_id FROM t_campaign_list ".
							 " WHERE import_id = ".dbNumberFormat($tmp['impid']);
			     wlog("[callList_process][updatelist] import list change status to expired check sql : ".$sql );
			     
	      		$result = $dbconn->executeQuery($sql);
				while($rs=mysql_fetch_array($result)){
					
					$sql = " UPDATE t_calllist_agent ".
								" SET `status` = 5 ".
								" WHERE campaign_id = ".$rs['campaign_id'].
								" AND calllist_id IN ( SELECT calllist_id FROM t_calllist WHERE import_id = ".dbNumberFormat($tmp['impid'])." ) ";
					wlog("[callList_process][updatelist] update sql : ".$sql );
				   $dbconn->executeUpdate($sql);
				   
				}//end while
	     	
	     	
	     }
	     //when change status from 4 to 1 update call list status back to  1 ( active )
	     if( $is_effected == 1){
	     	    //step1 check campaign use this import id
			     $sql = " SELECT campaign_id FROM t_campaign_list ".
							 " WHERE import_id = ".dbNumberFormat($tmp['impid']);
			     wlog("[callList_process][updatelist] import list set status from 4 to 1 check sql : ".$sql );
	      		$result = $dbconn->executeQuery($sql);
				while($rs=mysql_fetch_array($result)){
					//step2 update
					$sql = " UPDATE t_calllist_agent ".
								" SET `status` = 1".
								" WHERE campaign_id = ".$rs['campaign_id'].
								" AND calllist_id IN ( SELECT calllist_id FROM t_calllist WHERE import_id = ".dbNumberFormat($tmp['impid'])." ) ";
					wlog("[callList_process][updatelist] is_effected update sql : ".$sql );
				   $dbconn->executeUpdate($sql);
				   
				}//end while
	     	
	     }
	 
	     
	     
	     
	 
	     $dbconn->dbClose(); 
		 $res = array("result"=>"success");
		 echo json_encode($res);   
		
	}
	
	function deleteList(){
		
		$tmp = json_decode( $_POST['data'] , true); 
				
		$dbconn = new dbconn; 
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     //1 remove list from transaction ( do not remove for report )
	     /*
	     $sql = "DELETE FROM t_call_trans  WHERE calllist_id IN ( SELECT calllist_id from t_calllist WHERE import_id  = ".dbNumberFormat($tmp['impid'])." ) ";
	     wlog("[callList_process][deleteList] delete CALL TRANSACTION sql : ".$sql);
	     $result = $dbconn->executeUpdate($sql);
	     */
	     
	     //2 remove list from call list agent
	     $sql = "DELETE FROM t_calllist_agent WHERE calllist_id IN ( SELECT calllist_id FROM t_calllist WHERE import_id  = ".dbNumberFormat($tmp['impid'])." ) ";
	      wlog("[callList_process][deleteList] delete AGENT CALLLIST sql : ".$sql);
	      $result = $dbconn->executeUpdate($sql);
 

	     //3 remove list from import list field 
	     $sql = "DELETE FROM t_import_list_field WHERE import_id = ".dbNumberFormat($tmp['impid'])." ";
	      wlog("[callList_process][deleteList] delete IMPORT LIST FIELD sql : ".$sql);
	      $result = $dbconn->executeUpdate($sql);
	      
	    //4 remove flist from map list 
	     $sql = "DELETE FROM t_import_list WHERE import_id = ".dbNumberFormat($tmp['impid']);
	      wlog("[callList_process][deleteList] delete IMPORT LIST sql : ".$sql);
	     $result = $dbconn->executeUpdate($sql);
	        
	     //5 remove flist from map list 
	     $sql = "DELETE FROM t_campaign_list WHERE import_id = ".dbNumberFormat($tmp['impid']);
	      wlog("[callList_process][deleteList] delete CAMPAGIN MAPPED LIST sql : ".$sql);
	     $result = $dbconn->executeUpdate($sql);
	     
	      //LAST remove list from call list  
		$sql = "DELETE FROM t_calllist WHERE import_id = ".dbNumberFormat($tmp['impid']);
 		wlog("[callList_process][deleteList] delete CALLLIST sql : ".$sql);
		$result = $dbconn->executeUpdate($sql);

	     $dbconn->dbClose(); 
		 $res = array("result"=>"success");
		 echo json_encode($res);   
		
	}
	
	function detail(){
		
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     //check how many campaign use this list
	     /*
			$sql = " SELECT campaign_id  , join_date ".
						" FROM t_campaign_list ".
						" WHERE import_id = ".dbNumberFormat($_POST['id']);
			$result = $dbconn->executeQuery($sql);
			$count = 0;
			while($rs=mysql_fetch_array($result)){
				$tmp0[$count]= array(
						"cmpid" => nullToEmpty($rs['campaignid']),
						"joindate"=>getDatetimeFromDatetime($rs['join_date'])
				);
				$count++;
			}//end while
			*/
	     
	     //summary list in campaign
		     $sql = " SELECT campaign_id  , campaign_name , count( calllist_id ) as total_call ,  tmp.join_date ".
		     			" , sum( newlist_cnt ) as newlist_cnt ". 
						" , sum( callback_cnt ) as callback_cnt ".
						" , sum( followup_cnt ) as followup_cnt ".
						" , sum( dnd_cnt ) as dnd_cnt ".
						" , sum( badlist_cnt ) as badlist_cnt ". 
						" , sum( maxtry_cnt ) as maxtry_cnt ".
						" , sum( sales_cnt ) as sales_cnt ".
						" from ( ".
										" select a.campaign_id , campaign_name , a.calllist_id , cl.join_date ".
		     							" ,case when last_wrapup_option_id is null then 1 else 0 end as newlist_cnt ". 
										" ,case when last_wrapup_option_id = 1 then 1 else 0 end as callback_cnt ". 
										" ,case when last_wrapup_option_id = 2 then 1 else 0 end as followup_cnt ".
										" ,case when last_wrapup_option_id = 3 then 1 else 0 end as dnd_cnt ".
										" ,case when last_wrapup_option_id = 4 then 1 else 0 end as badlist_cnt ". 
										" ,case when last_wrapup_option_id = 5 then 1 else 0 end as maxtry_cnt ".
										" ,case when last_wrapup_option_id = 6 then 1 else 0 end as sales_cnt ".
										" from t_calllist_agent a ".
			     							" left outer join t_campaign t on t.campaign_id = a.campaign_id ".
			     							" left outer join t_calllist c on a.calllist_id = c.calllist_id ".
		     								" left outer join t_campaign_list cl on cl.campaign_id = a.campaign_id AND cl.import_id = c.import_id ".
										" where c.import_id =  ".dbNumberFormat($_POST['id'])." ".
						" ) as tmp ".
		    
		     wlog("[callList_process][detail] sql : ".$sql);
	 		$result = $dbconn->executeQuery($sql);
	 		$count = 0;
			while($rs=mysql_fetch_array($result)){
					$tmp1[$count] = array(
						"cmpid" => nullToEmpty($rs['campaign_id']),
						"cmpname" => nullToEmpty($rs['campaign_name']),
						"jdate" => getDatetimeFromDatetime($rs['join_date']),
						"total" => nullToEmpty($rs['total_call']),
						"newlist" => nullToEmpty($rs['newlist_cnt']),
						"cback" => nullToEmpty($rs['callback_cnt']),
						"follow" => nullToEmpty($rs['followup_cnt']),
						"dnd" => nullToEmpty($rs['dnd_cnt']),
						"blist" => nullToEmpty($rs['badlist_cnt']),
						"maxtry" => nullToEmpty($rs['maxtry_cnt']),
						"sales" => nullToEmpty($rs['sales_cnt']),
					);					
					$count++;
			}

			if($count==0){
				$tmp1 = array("result"=>"empty");
			}
		

			// all import list detail
		
			    $sql = " SELECT import_id ,list_name,list_detail,list_comment,l.status,file_name,file_size,file_type, total_records,bad_list, ".
							" inlist_dup,indb_dup,l.create_date,first_name,last_name, s.status_detail , s.status_color ".
							" FROM t_import_list l LEFT OUTER JOIN t_agents a ON l.create_user = a.agent_id ".
			    			" LEFT OUTER JOIN ts_map_list_status s ON l.status = s.status_id ".
							" WHERE import_id = ".dbNumberFormat($_POST['id']);

			$count = 0;
			$result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){
				$tmp2= array(
						"impid" => nullToEmpty($rs['import_id']),
						"lname" => nullToEmpty($rs['list_name']),
						"lnote" => nullToEmpty($rs['list_comment']),
						"lsts" => nullToEmpty($rs['status']),
						"lstsdtl" => nullToEmpty($rs['status_detail']),
						"lstscolor" => nullToEmpty($rs['status_color']),
						"ldtl" => nullToEmpty($rs['list_detail']),
						"fname" => nullToEmpty($rs['file_name']),
						"fsize" => nullToEmpty($rs['file_size']),
						"ftype" => nullToEmpty($rs['file_type']),
						"total" => nullToEmpty($rs['total_records']),
						"blist" => nullToEmpty($rs['bad_list']),
						"listdup" => nullToEmpty($rs['inlist_dup']),
						"dbdup" => nullToEmpty($rs['indb_dup']),
						"cred" => getDatetimeFromDatetime($rs['create_date']),
						"creu" => nullToEmpty($rs['first_name']." ".$rs['last_name']),
						"manlist" => coutManualList( $_POST['id'] )
					);					
					$count++;
			}
			
			if($count==0){
				$tmp2 = array("result"=>"empty");
			}
			
			//query excel import used field 
			$sql = "SELECT caption_index , caption_name  , field_name ".
						" FROM t_import_list_field ".
						" WHERE import_id = ".dbNumberFormat($_POST['id'])." ".
						" AND field_name != '0' ".
						" ORDER BY caption_index";
			wlog($sql);
			  $count = 0;
			 $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){
			    	$tmp3[$count] = array(
			    		"idx" => nullToEmpty($rs['caption_index']),
			    		"caption" => nullToEmpty($rs['caption_name']),
			    		"fieldn" => nullToEmpty($rs['field_name']),
					);
			    	$count++;
				}
				if($count==0){
					$tmp3 = array("result"=>"empty");
				}
				/*
		// left box
			$sql = " SELECT campaign_id , campaign_name ".
						" FROM t_campaign ".
						" WHERE campaign_id NOT IN ( ".
											" SELECT campaign_id FROM t_campaign_list WHERE import_id = ".dbNumberFormat($_POST['id'])." ) ";

			wlog($sql);
	  
	  $count = 0;
	  $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
					$tmp5[$count] = array(
								"impid"  => nullToEmpty($rs['campaign_id']),
								"lname"  => nullToEmpty($rs['campaign_name']),
					);   
				$count++;
			}
		if($count==0){
			$tmp5 = array("result"=>"empty");
		}
		
		  //right box
			$sql = " SELECT campaign_id , campaign_name ".
						" FROM t_campaign ".
						" WHERE campaign_id IN ( ".
											" SELECT campaign_id FROM t_campaign_list WHERE import_id = ".dbNumberFormat($_POST['id'])." ) ";
	
		  wlog($sql);
		  
		  $count = 0;
		  $result = $dbconn->executeQuery($sql);
				while($rs=mysql_fetch_array($result)){   
					$tmp6[$count] = array(
								"impid"  => nullToEmpty($rs['campaign_id']),
								"lname"  => nullToEmpty($rs['campaign_name']),
							);   
					$count++;
				}
			if($count==0){
				$tmp6 = array("result"=>"empty");
			}
			*/
		
			$dbconn->dbClose(); 
		    $res = array( "listcmp"=>$tmp1,"listdtl"=>$tmp2,  "usedfield"=>$tmp3 );
			echo json_encode($res);   
			
	}

	function detailExport(){
		
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
		// $test = new OutboundGenesys();

		// var_dump($test->clearContactlist());
	     //check how many campaign use this list
	     /*
			$sql = " SELECT campaign_id  , join_date ".
						" FROM t_campaign_list ".
						" WHERE import_id = ".dbNumberFormat($_POST['id']);
			$result = $dbconn->executeQuery($sql);
			$count = 0;
			while($rs=mysql_fetch_array($result)){
				$tmp0[$count]= array(
						"cmpid" => nullToEmpty($rs['campaignid']),
						"joindate"=>getDatetimeFromDatetime($rs['join_date'])
				);
				$count++;
			}//end while
			*/
	     
	     //summary list in campaign
		     $sql = " SELECT import_id  , list_name , count( calllist_id ) as total_call ,  tmp.create_date ".
			 			" , sum( pvt_cnt ) as pvt_cnt ". 
			 			" , sum( new_cnt ) as new_cnt ". 
		     			" , sum( standard_cnt ) as standard_cnt ". 
						" , sum( nonspon_cnt ) as nonspon_cnt ". 
						" , sum( hot_cnt ) as hot_cnt ". 
						" , sum( out_cnt ) as out_cnt ". 
						" , sum( remain_cnt ) as remain_cnt ".
						" from ( ".
										" select cl.import_id, cl.list_name, a.calllist_id, cl.create_date ".
										" ,case when ci.genesys_contactListId = '178b1b61-8199-4ce8-aa9f-6323e4a2bf61' then 1 else 0 end as nonspon_cnt ". 
										" ,case when ci.genesys_contactListId = '2fa049b8-2dfc-4563-8129-9e023114834f' then 1 else 0 end as pvt_cnt ". 
										" ,case when ci.genesys_contactListId = '0db0c348-303c-4cc4-ad51-16df95283e24' then 1 else 0 end as new_cnt ". 
		     							" ,case when ci.genesys_contactListId = '82f47685-b7a4-47ec-8a81-82410be925f4' then 1 else 0 end as standard_cnt ". 
										" ,case when ci.genesys_contactListId = 'edb2fbbf-ddf6-452a-883f-1ba985234ebc' then 1 else 0 end as hot_cnt ". 
										" ,case when ci.genesys_contactListId = '35d02fd8-8fe2-43f6-a80c-8a17532cb9f6' then 1 else 0 end as out_cnt ". 										
										" ,case when ci.genesys_id is null then 1 else 0 end as remain_cnt ". 
										" from t_calllist a ".
											" left outer join t_import_list cl on cl.import_id = a.import_id ".
			     							" left outer join t_calllist_integration ci on a.calllist_id = ci.calllist_id ".

										" where a.import_id =  ".dbNumberFormat($_POST['id'])." ".
						" ) as tmp";
		    
		     wlog("[callList_process][export] sql : ".$sql);
	 		$result = $dbconn->executeQuery($sql);
	 		$count = 0;
			while($rs=mysql_fetch_array($result)){
					$tmp1[$count] = array(
						"impid" => nullToEmpty($rs['import_id']),
						"lsname" => nullToEmpty($rs['list_name']),
						"cdate" => getDatetimeFromDatetime($rs['create_date']),
						"total" => nullToEmpty($rs['total_call']),
						"nonspon" => nullToEmpty($rs['nonspon_cnt']),
						"pvtenv" => nullToEmpty($rs['pvt_cnt']),
						"newenv" => nullToEmpty($rs['new_cnt']),
						"standard" => nullToEmpty($rs['standard_cnt']),
						"hot" => nullToEmpty($rs['hot_cnt']),
						"out" => nullToEmpty($rs['out_cnt']),
						"remain" => nullToEmpty($rs['remain_cnt']),
					);					
					$count++;
			}

			if($count==0){
				$tmp1 = array("result"=>"empty");
			}
				
		
			$dbconn->dbClose(); 
		    $res = array( "listexport"=>$tmp1 );
			echo json_encode($res);
			
	}
	
	//show list detail and maintenance list
	function detailMaintain(){
		
		
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     	//list maintenance
			//dynamic search field
			$sql = " SELECT lf.caption_name, lf.field_name, fl.field_type".
						" FROM t_import_list_field lf inner join ts_field_list fl ON lf.field_name = fl.field_name ".
						" WHERE  import_id = ".dbNumberFormat($_POST['id']).
						" AND  lf.field_name != '0' ";
						//" AND fl.field_type = 'varchar' ";
			
			$count = 0;
			$result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){
				$tmp1[$count]= array(
					"searchcaption" => nullToEmpty($rs['caption_name']),
					"searchfieldname" => nullToEmpty($rs['field_name']),
					"searchfieldsys" => nulltoEmpty($rs['field_type']),
				);
				$count++;
			};
			
			if($count==0){
					$tmp1 = array("result"=>"empty");
			}
			
			//dynamic header
			$fields = array("calllist_id"); //system field ( PK )
			$sql = " SELECT caption_name , field_name ".
						" FROM t_import_list_field ".
						" WHERE field_name != '0' ".
						" AND import_id  = ".dbNumberFormat($_POST['id'])." ".
						" ORDER BY caption_index ";
			wlog("[callList_process][detail] find dynamic column sql : ".$sql);
			
			$result = $dbconn->executeQuery($sql);
			$count = 0;
			while($rs=mysql_fetch_array($result)){
					array_push( $fields , $rs['field_name'] );
					$tmp2[$count] = array(
						"header" => nullToEmpty($rs['field_name']),
						"caption" => nullToEmpty($rs['caption_name']),
					);
					$count++;
			}
			
			if( $count == 0 ){
					$tmp2 = array("result"=>"empty");
			}else{
					//status field for set do not call
					$tmp2[$count] = array("caption"=>"Do not call");
					array_push( $fields , "status" );
			}
			
		//paging data
		 $page = 0;
		 $pagelength = 4;  // about 50;
	     if( isset($_POST['page'])){
	    	 $page =  ( intval($_POST['page']) - 1 ) * $pagelength;
	     }
	     
			//dynamic data
			//get dynamic field  from db
			$field = implode(",", $fields);
			$sql =  "SELECT ".$field." ".
						" FROM t_calllist ".
						" WHERE import_id = ".dbNumberFormat($_POST['id'])." ".
						" LIMIT ".$page." , ".$pagelength; 
			
		    $fieldlength = count($fields); 
		    $count = 0;
		    $result = $dbconn->executeQuery($sql);
		    while($rs=mysql_fetch_row($result)){   
			   $a = array();
		    	for($i=0; $i< $fieldlength ;$i++){
		    			$a['f'.$i] = nullToEmpty($rs[$i]);
		    	}
		    	 $tmp3[$count]  = $a;
		    	 $count++;
			}
			
			//count data row
			$sql = "SELECT COUNT(calllist_id) AS total ".
						" FROM t_calllist ".
						" WHERE import_id = ".dbNumberFormat($_POST['id'])." ";
		   $total = 0;
	       $result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){
				$total = $rs['total'];
			}   
					
			
			
			$dbconn->dbClose(); 
		    $res = array( "searchfield"=>$tmp1, "mnheader"=>$tmp2 , "mndata" => $tmp3 , "totaldata" => $total ); // "listcmp"=>$tmp1,"listdtl"=>$tmp2,  "usedfield"=>$tmp3
			echo json_encode($res);   
			
	  //   "mnheader"=>$tmp3 , "mn"=> $tmp4 ,  , "searchfield" => $tmpx 
		
	}
	
	function coutManualList( $importid ){
		
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	        $sql = " SELECT COUNT(manual_list) AS manuallist FROM t_calllist ".
						 " WHERE import_id = ".dbNumberFormat($importid);
	     
	       $count = 0;
	       $result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){
				$count = $rs['manuallist'];
			}   
		
		return $count;
		
	}
	
	
	//find import temp then remove
	function removeTemp(){
		
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     $sql = " SELECT import_id , import_key FROM t_import_list ".
					 " WHERE list_name IS NULL";
	     
	     	wlog("[callList_process][removeTemp] find import key sql : ".$sql);
	       $tmp_table = array();
	       $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){
					// $rs['field_name'];
					//array_push($tmp_table, $rs['import_key']);
					
					$sql = "DELETE FROM t_import_list WHERE import_key = ".dbformat($rs['import_key']);
		     		wlog("[callList_process][removeTemp] delete row sql : ".$sql);
					$dbconn->executeUpdate($sql);
		     	
		     		$sql = "DROP TABLE temp_table".dbformat($rs['import_key']);
		     		wlog("[callList_process][removeTemp] drop table sql : ".$sql);
					$dbconn->executeUpdate($sql);
					
					$sql = "DELETE FROM t_import_list_field ".
								" WHERE import_id = ".dbNumberFormat($rs['import_id']);
					wlog("[callList_process][removeTemp] delete row sql : ".$sql);
					$dbconn->executeUpdate($sql);
				
				
			}   
	     /*
		$size = count( $tmp_table );
	     for( $i=0; $i < $size; $i++){
	     	
	     		$sql = "DELETE FROM t_import_list WHERE import_key = ".dbformat($tmp_table[$i]);
	     		wlog("[callList_process][removeTemp] delete row sql : ".$sql);
				$dbconn->executeUpdate($sql);
	     	
	     		$sql = "DROP TABLE temp_table".dbformat($tmp_table[$i]);
	     		wlog("[callList_process][removeTemp] drop table sql : ".$sql);
				$dbconn->executeUpdate($sql);
				
				$sql = "DELETE FROM t_import_list_field ".
							" WHERE import_id = ".dbNumberFormat($rs['import_id']);
				wlog("[callList_process][removeTemp] delete row sql : ".$sql);
				$dbconn->executeUpdate($sql);
				
	     	
	     }
	*/
	        $dbconn->dbClose(); 
		
	}
	
	
	//import from temptable to calllist table
	function importtodb(){
		//use select insert
		
		$tmp    = json_decode( $_POST['data'] , true); 
		$mapp = json_decode( $_POST['mapping'] , true);

		if( !isset( $_POST['key'] )){
			exit;
		}
		$key = $_POST['key'];
		
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     
	     //start mapping
	     $field = array();
	     
	     //is mapping field are standard field or custom field
	     $sql = "SHOW columns FROM t_calllist";
	     wlog("command check fields : ".$sql);
	     $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){
					/* ! case sensitive */
					array_push($field, $rs['Field'] );
			} 

	
		$fields = array();
		//check in array	
		$size = count($mapp);
		 for( $i=0; $i< $size ; $i++){
		     	if( $mapp[$i]['value'] != "0" ){
		     		//wlog("map filed : ".$mapp[$i]['value']);
		     			array_push($fields,$mapp[$i]['value']);
		     			//if not in array alter table add column t_calllist ( master )
		     			if( !in_array( $mapp[$i]['value']  , $field)) {
		     					wlog( "field ".$mapp[$i]['value'] ." is not in array");
		     					//add field not in array
		     					//select from ts_field_list
		     					$sql = "SELECT field_name , field_type , field_length FROM ts_field_list WHERE field_name = ".dbformat($mapp[$i]['value'] );
		     					wlog( "field not in array check sql : ".$sql);
		     				    $result = $dbconn->executeQuery($sql);
		     				    if($rs=mysql_fetch_array($result)){
		     				    	//bug if field_type is date or datetime !!
		     				    	$alter = "ALTER TABLE t_calllist ADD ".$rs['field_name']." ".$rs['field_type']."(".$rs['field_length'].")";
		     				    	wlog("[callList_process][importtodb] ALTER table ADD column sql : ".$alter);
		     				    	$dbconn->executeQuery($alter);
		     				    }
		     				
		     			}//end if in array
		  		}//end if mapp
	     }//end loop for
			
	     
	     //update list detail
	    $sql = "UPDATE t_import_list SET ".
	    			"  list_name = ".dbformat($tmp['lname']).",".
	    			" list_detail = ".dbformat($tmp['ldesc']).",".
	    			" `status` =  1 , ". //set stauts 1 available when set up list name  
	     			" update_date =NOW(),".
				    "update_user =".dbformat( $tmp['uid'])." ".
				    "WHERE import_key = ".dbformat($key)." ";	
	   wlog("[callList_process][importtodb] update t_import_list sql : ".$sql);
	   $dbconn->executeUpdate($sql); 
	   
	
	     //get import id 
	     $sql = "SELECT import_id FROM t_import_list WHERE import_key = ".dbformat($key);
	     $result = $dbconn->executeQuery($sql);
	     $impid = "";
		 if($rs=mysql_fetch_array($result)){
		 	$impid = $rs['import_id'];
		 }
		if($impid==""){
			//if no import id exit
			$res = array("result"=>"fail","msg"=>"import id not found");
			exit;
		}	

		//insert into t_calllist 
		//check option for import  too
		 //start import 
		$fields = implode(",", $fields);
		 $sql = " INSERT INTO t_calllist (".$fields.", `status` , import_id , create_date ) ".
					 " SELECT ".$fields." , CASE WHEN excel_dup = 1 THEN 15 ELSE 1 END, ".$impid." , NOW() ".
		 			 " FROM tmp_table".$key." ";
		 
		if($tmp['optimp']=="onlynew"){
	 			 wlog("[callList_process][importtodb] import option ONLY NEW checked ");
	 			$sql = $sql." WHERE excel_dup IS NULL AND calllist_dup IS NULL AND badlist IS NULL ";
	 	}
		 
		 	$sql = $sql. " ORDER BY seq ";
		 	wlog( "[callList_process][importtodb]  importtodb sql : ".$sql);
			$result = $dbconn->executeQuery($sql);
	 		wlog( "[callList_process][importtodb]  importtodb total : ".$result);
		
			
			//
			//	insert mapping field 	
			//for use in calllist with not mapping campaign
	
	//** move from importtodb to mappingfield
	/*
		for( $i=0; $i< count($mapp) ; $i++){
			    //insert mapping list field
				 $sql =  "INSERT INTO t_import_list_field ( import_id , caption_index , caption_name , field_name , create_user , create_date ) VALUES ( ".
								 " ".dbNumberFormat( $impid )." ".
								 ",".dbformat( $mapp[$i]['key'] )." ".
				  				",".dbformat( $mapp[$i]['cap'] )." ".
					   	   		 ",".dbformat( $mapp[$i]['value'])." ".
								 ",".dbNumberFormat($tmp['uid'])." , NOW() )  "; 
					$dbconn->executeUpdate($sql); 
			}
		*/	
			
			/*
	     $field = array();
	     $sql = "SELECT field_name FROM t_list_field WHERE list_id = ".$tmp['lid']." ORDER BY rowid ";
	     wlog("[import_process][import_callList] sql : ".$sql);
	        $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){
				
					// $rs['field_name'];
					array_push($field,$rs['field_name']);
				
			}   
			*/
	
			
			
			
		 
		    $dbconn->dbClose(); 
		    $res = array("result"=>"success");
			echo json_encode($res);   
		
	
	}
	
	//after
	function mappingfield(){
		
			$tmp = json_decode( $_POST['data'] , true); 
			$mapp = json_decode( $_POST['mapping'] , true); 
			$phone = json_decode( $_POST['phone'] , true);
			$txt = json_decode( $_POST['txt'] , true); 
		
			if( !isset( $_POST['key'] )){
				exit;
			}
			$key = $_POST['key'];
			
			$dbconn = new dbconn;  
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
		     //check if exist delete it
			  $sql = "DROP TABLE IF EXISTS tmp_table".$key;
			  wlog("[import_process][mapdbfield] drop table  : ".$sql);
			  $dbconn->executeUpdate($sql); 
			  
			  //get data
			  $sql = "SELECT import_id , temp_table_name , field_delimiter FROM t_import_list WHERE import_key = ".dbformat( $key )." ";
			  $result = $dbconn->executeQuery($sql);
			  if($rs=mysql_fetch_array($result)){
			  			$impid = $rs['import_id'];
			 			$delimiter = $rs['field_delimiter'];
			 			$temptable = $rs['temp_table_name'];
			 } 
			 // mapping	[{"key":"0","value":"first_name"},{"key":"1","value":"last_name"},{"key":"2","value":"tel1"},{"key":"3","value":"0"},{"key":"4","value":"0"}]
			//create table  sql command for create temp table
			  		 
		     $column = array();
		    //    $createtab = "CREATE TABLE tmp_table".$key." ( seq int(7) NOT NULL AUTO_INCREMENT, ";
		     $createtab = "CREATE TABLE tmp_table".$key." ( seq int(7) NOT NULL AUTO_INCREMENT, ";
		     $size =  count($mapp);
		     for( $i=0; $i< $size; $i++){
		     	//wlog( $mapp[$i]['key']."|".$mapp[$i]['value'] );
		     	if( $mapp[$i]['value'] != "0" ){
		  			$createtab = $createtab." ".$mapp[$i]['value']." varchar(255), "; 
		  			array_push( $column , $mapp[$i]['value'] );
		  		//	$insert = $insert."".$mapp[$i]['value'].",";
		  		}else{
		  			array_push( $column , '@dummy' );
		  		}
		     		
		     }//end loop for
		     
		     $field = "(". implode( "," ,$column) .")";
		     
		   //  $insert = $insert."excel_dup,calllist_dup ) VALUES (   ";
		     
		    //$createtab = $createtab." excel_dup tinyint(1), calllist_dup tinyint(1) ";
		   	$createtab = $createtab." PRIMARY KEY (`seq`) ";
			$createtab = $createtab." ) ";

			wlog("create table :".$createtab);
			$dbconn->executeUpdate($createtab);
			
			//add index to primary key column
			$sql = "CREATE INDEX idx_".$key." ".
						"ON tmp_table".$key." (first_name,last_name,tel1) ";
			wlog("[callList_process][mappingfield] CREATE INDEX on temp_table sql : ".$sql);
			$dbconn->executeUpdate($sql);
			
			wlog("---- prepare load file ----");
			wlog("column option : ".$field);
			
			
			//wlog("ignore header : ".$tmp['ignore_header']);
			$ignoreheader = 0;
			if( $tmp['ignore_header']=="1" ){
					wlog("ignore header : checked ".$tmp['ignore_header']);
					$ignoreheader = 1;
			}
			
			
			 
		  $filepath = dirname(__FILE__) .'/temp/'.$key.".csv";	
		  $sql = " LOAD DATA LOCAL INFILE '".$filepath."' ".
					 " INTO TABLE ".$temptable." ".
					 " FIELDS TERMINATED BY '".$delimiter."' ". 
				//	 " LINES TERMINATED BY '\r\n' ".
					 " IGNORE ".$ignoreheader." LINES ".$field.
		  			 " SET `seq` = NULL; ";
		  				
		  wlog("[callList_process][mappingfield] sql : ".$sql);
		$dbconn->executeUpdate($sql);
		
		//add column excel_dup , calllist_dup , badlist	
		 $sql = "ALTER TABLE ".$temptable." ADD  excel_dup tinyint(1) , ADD calllist_dup tinyint(1) , ADD badlist tinyint(1) ";
		 wlog("[callList_process][mappingfield] ALTER table ADD column sql : ".$sql);
		 $dbconn->executeUpdate($sql);
		 

		 //clear all sign
		 //cleansing telephone data
		 // ignore reason : need phone extension
		 //only tel1 ( mobile will check )
		 $sql = "UPDATE ".$temptable." SET ";
		 $phonefield = array();
		 //hardcode only tel1 ( mobile will check )
			 $phone = array('tel1');
		     $size =  count($phone);
		     for( $i=0; $i< $size; $i++){
		     	if($i == 0){
		     		$sql = $sql." ".$phone[$i].'=fn_Getdigits('.$phone[$i].')';
		     	}else{
		     		$sql = $sql.", ".$phone[$i].'=fn_Getdigits('.$phone[$i].')';
		     	}
		     	array_push( $phonefield , $phone[$i]);
		     }
		    
		   // UPDATE ".$temptable." SET tel1  = fn_Getdigits( tel1 ) ,tel2 = fn_Getdigits( tel2 );
 			wlog("[callList_process][mappingfield] CLEANSING DATA field [".implode( ",", $phonefield )."] sql : ".$sql);
		 	$dbconn->executeUpdate($sql);
		 	
		 
		 	//update phone badlist
			$sql = " UPDATE ".$temptable." SET badlist = 1  WHERE (";
			$size =  count($phonefield);
			for( $i=0; $i< $size; $i++){
				if($i==0){
		 					$sql = $sql.' length( fn_Getdigits('.$phonefield[$i].')) not in (9,10) ';
		 		}else{
		 					$sql = $sql.' AND length( fn_Getdigits('.$phonefield[$i].')) not in (9,10) ';
		 		}
			}
		 	$sql = $sql.")";
			wlog("[callList_process][mappingfield] CHECKING PHONE badlist sql : ".$sql);
		 	$dbconn->executeUpdate($sql);
		 	
		  	//update text badlist ignore text badlist
		  	/*
		  	$textfield = array();
		 	$sql = " UPDATE ".$temptable." SET badlist = 1  WHERE (";
			$size =  count($txt);
			for( $i=0; $i< $size; $i++){
				array_push($textfield , $txt[$i]);
				if($i==0){
		 					$sql = $sql.' length( trim('.$txt[$i].')) = 0 ';
		 		}else{
		 					$sql = $sql.' OR length( trim('.$txt[$i].')) = 0 ';
		 		}
			}
		 	$sql = $sql.")";
			wlog("[callList_process][mappingfield] CHECKING TEXT badlist sql : ".$sql);
		 	$dbconn->executeUpdate($sql);
			*/
		 	
		 	//hardcode check duplicate
		 	$sql = " UPDATE tmp_table".$key." a ". 
							" , ( SELECT min(seq) as seq , first_name , last_name , tel1 ".
							" FROM $temptable ".
							" GROUP BY first_name , last_name , tel1) b".
							" SET a.excel_dup = 1 ".
							" WHERE a.first_name = b.first_name ".
		 					" AND a.last_name = b.last_name ".
							" AND a.tel1 = b.tel1 ";
		$sql = $sql." AND a.SEQ <> b.SEQ "; 
		
		
		 	
			//check in list (excel) duplicate
			/*
				$sql = " UPDATE tmp_table".$key." a ". 
							" , ( SELECT min(seq) as seq , ".implode( ",", $textfield ).   
							" FROM $temptable ".
							" GROUP BY ".implode( ",", $textfield )." ) b".
							" SET a.excel_dup = 1 ".
							" WHERE ";
				$size = count( $textfield );
				for( $i=0; $i < $size ; $i++ ){
					$sql = $sql." a.".$textfield[$i]." = b.".$textfield[$i]." AND ";
				}
			$sql = $sql." a.SEQ <> b.SEQ "; 
		*/			
		
				wlog("[callList_process][mappingfield] CHECKING excel duplicate sql : ".$sql);
				$dbconn->executeUpdate($sql);
				
				//check database dulicate
				/*
					$sql = "UPDATE tmp_table".$key." a , t_calllist b".
								" SET a.calllist_dup = 1 ".
								" WHERE ";
					
					$size = count( $textfield );
					for( $i=0; $i < $size ; $i++ ){
							$sql = $sql." a.".$textfield[$i]." = b.".$textfield[$i]." AND";
					}
					$sql = substr($sql, 0, -3);
					
					wlog("[callList_process][mappingfield] CHECKING database duplicate sql : ".$sql);
					$dbconn->executeUpdate($sql);
				*/
				
				//hardcode database duplicate
						$sql = "UPDATE tmp_table".$key." a , t_calllist b".
								" SET a.calllist_dup = 1 ".
								" WHERE a.first_name = b.first_name ".
								" AND a.last_name = b.last_name ".
								" AND a.tel1 = b.tel1 ";
						wlog("[callList_process][mappingfield] CHECKING database duplicate sql : ".$sql);
							$dbconn->executeUpdate($sql);
						
				//summary result replace array variable than variable ( safe performance );
		 		 $listresult = array( $inlist => 0 , $indb => 0 , $badlist => 0 , $total => 0 );
				 $sql = "SELECT COUNT(*) AS total , SUM(excel_dup) AS inlist , SUM(calllist_dup) AS indb , SUM(badlist) AS badlist ".
				 			"  FROM ( ".
							"  			SELECT  case when badlist = 1 then 1 else 0 end as badlist ".
							"  			, case when calllist_dup = 1 and badlist is null and excel_dup is null then 1 else 0 end as calllist_dup".
							"  			, case when excel_dup = 1 and badlist is null then 1 else 0 end  as excel_dup	".	
							"			FROM tmp_table".$key.
							"			) a " ." ";
				 
				// FROM tmp_table".$key;
				 wlog("[callList_process][mappingfield] summary sql : ".$sql);
				 $result = $dbconn->executeQuery($sql);
				 if($rs=mysql_fetch_array($result)){   
				 		$listresult['inlist'] = $rs['inlist'];
				 		$listresult['indb']  = $rs['indb'];
				 		$listresult['badlist']  = $rs['badlist'];
				 		$listresult['total'] = $rs['total'];
				 		
				 }
				 
			
				 
				  	//update to main table t_import_list
				     $sql = " UPDATE t_import_list SET ".
				     			" total_records = ".dbNumberFormat($listresult['total']).",".
								" bad_list = ".dbNumberFormat( $listresult['badlist'] ).",". 
								" inlist_dup = ".dbNumberFormat($listresult['inlist']).",".
								" indb_dup = ".dbNumberFormat($listresult['indb'])." ".
								" WHERE import_key =  ".dbformat($key)." ";
				      wlog("[callList_process][mappingfield] update list result sql : ".$sql);
				  	 $dbconn->executeUpdate($sql);
				  	 
	
			//fix if user back and next to this event again
			$sql= "DELETE FROM t_import_list_field WHERE import_id = ".$impid;
			wlog('[callList_process][mappingfield] DELETE mapping field before INSERT sql : '.$sql);
			$dbconn->executeUpdate($sql); 
				  	 
			//save mapping field 	  	 
			for( $i=0; $i< count($mapp) ; $i++){
			    //insert mapping list field
				 $sql =  "INSERT INTO t_import_list_field ( import_id , caption_index , caption_name , field_name , create_user , create_date ) VALUES ( ".
								 " ".dbNumberFormat( $impid )." ".
								 ",".dbformat( $mapp[$i]['key'] )." ".
				  				",".dbformat( $mapp[$i]['cap'] )." ".
					   	   		 ",".dbformat( $mapp[$i]['value'])." ".
								 ",".dbNumberFormat($tmp['uid'])." , NOW() )  "; 
				 wlog('[callList_process][mappingfield] insert mapping field sql : '.$sql);
				$dbconn->executeUpdate($sql); 
			}

				  		
			$dbconn->dbClose();	 
			
			$newlist = $listresult['total'] - ( $listresult['badlist'] + $listresult['inlist'] + $listresult['indb'] ); 
			$data = array("result"=>"success" , "total"=> $listresult['total'] , "newlist" => $newlist , "bad"=> $listresult['badlist'] , "inlist"=> $listresult['inlist'] ,"indb"=> $listresult['indb'] );
			echo json_encode( $data ); 
		     				    
		     				    	
		
	}

	function testload(){
		
		$dbconn = new dbconn;  
	        $dbconn->createConn();
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		
		$sql ="LOAD DATA LOCAL INFILE '/Users/ArnonW/WorkSpace/TeleSmile/temp/547777b04bb1d.csv'  INTO TABLE 'tmp_table547777b04bb1d'  FIELDS TERMINATED BY '|'  ".
				"LINES TERMINATED BY '\r\n'  IGNORE 1 LINES (first_name,last_name,tel1,@ignore,@ignore) SET `seq` = NULL; ";
		 
			  echo("[callList_process][mappingfield] sql : ".$sql);
		$res = $dbconn->executeUpdate($sql);
		echo $res;
	}
	
	//before
	function mappingfield_(){
	
			$tmp = json_decode( $_POST['data'] , true); 
			$mapp = json_decode( $_POST['mapping'] , true); 
			$chdup = json_decode( $_POST['dup'] , true); 
		
			if( !isset( $_POST['key'] )){
				exit;
			}
			$key = $_POST['key'];
				
			$dbconn = new dbconn;  
	        $dbconn->createConn();
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
		     
		    //delete current mapping list field  ?
		    /*
		    $sql = "DELETE FROM t_list_field WHERE list_id = ".dbNumberFormat( $tmp['lid'])." ";
		    wlog("[import_process][mapdbfield] delete current mapping sql : ".$sql);
		    $dbconn->executeUpdate($sql);
		 */
		     
	      //check if exist delete it
		  $sql = "DROP TABLE IF EXISTS tmp_table".$key;
		  wlog("[import_process][mapdbfield] drop table  : ".$sql);
		  $dbconn->executeUpdate($sql); 
		     
		     //creatab is sql command for create temp table
		     //insert is sql command for insert data into temp table
		     $insert = "INSERT INTO tmp_table".$key." (  seq,";  
		 
		     $createtab = "CREATE TABLE tmp_table".$key." ( seq int(7), ";
		     $size =  count($mapp);
		     for( $i=0; $i< $size; $i++){
		     	//wlog( $mapp[$i]['key']."|".$mapp[$i]['value'] );
		     	if( $mapp[$i]['value'] != "0" ){
		  			$createtab = $createtab." ".$mapp[$i]['value']." varchar(255), ";
		  			$insert = $insert."".$mapp[$i]['value'].",";
		  		}
		     		
		     }//end loop for
		     
		     $insert = $insert."excel_dup,calllist_dup ) VALUES (   ";
		     
		    $createtab = $createtab." excel_dup tinyint(1), calllist_dup tinyint(1) ";
			$createtab = $createtab." ) ";
		     
		//	wlog( $createtab );
		//	wlog( $insert );
	
			//$fn = "tmp_table".$key;
			
			//test
			//start wwrite
			/*
			wwrite("SET NAMES utf8;\r\n" , $fn );
			wwrite("DROP TABLE IF EXISTS `tmp_table".$key."`;\r\n" , $fn);
			wwrite( $createtab , $fn);
			wwrite("ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n" , $fn);
			wwrite("BEGIN;\r\n" , $fn);
			*/
		
			//create temp table
		    $dbconn->executeUpdate($createtab); 
		     
		    //end for prepare table for import data 
		    
		    
		    //start process excel file
		    require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
			
			$sql = " SELECT file_path , file_name  ".
						" FROM t_import_list ".
						" WHERE import_key = ".dbformat($key);
			
  			wlog( $sql );
			//read path of excel from database
		    $result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){  
				$path_excelfile = $rs['file_path']."/".$rs['file_name'];
			}
			
			$objPHPExcel = PHPExcel_IOFactory::load($path_excelfile);
			$worksheet = $objPHPExcel->setActiveSheetIndex(0);
		    
		     wlog("start remove column ");
			//algorithm for remove do not map field
			$i = count($mapp) - 1; 
			//wlog("start with length :  ".$length);
			for( $i ; $i>=0; $i--){
				wlog( "loop : i ".$i);
				wlog(" column index ".$mapp[$i]['key'] ." column name ".$mapp[$i]['value']  );
				
		     	if( $mapp[$i]['value'] == "0" ){
		     			wlog(" !!remove column index ".$mapp[$i]['key'] ." column name ".$mapp[$i]['value']  );
		  				$objPHPExcel->getActiveSheet()->removeColumnByIndex( $mapp[$i]['key'] ,1);
		  		}
		     		
		     }//end loop for
		     
		     
		     //start read excel
		     	$highestRow            = $worksheet->getHighestRow(); // e.g. 10
			   	$highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
				$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
				//echo "total remain column ".$highestColumnIndex;
			
				
	  			// $row == 1 don't map header 
	  			$count = 1;
	  			$badlist = 0;
	  			
	  			wlog("[excel process] highestRow : ".$highestRow);
	  			wlog("[excel process] highestColumn : ".$highestColumn);
	  			wlog("[excel process] highestColumnIndex : ".$highestColumnIndex);
	  		
	  			//wwrite("INSERT INTO `tmp_table".$key."` VALUES " , $fn);
	  			
				for ($row = 2; $row < $highestRow; ++$row) {
					 		//$ttt = "";
					 		
					 		$sql = $count.",";
					 	
					 		//$xtest = "(".$count.",";
							for ($col = 0; $col < $highestColumnIndex; ++$col){
								
									$cell = $worksheet->getCellByColumnAndRow($col, $row);
									$val = $cell->getValue();
								
								//	$ttt = $ttt."| column [".$col."]".$val.";";
											
											
										if( !empty($val)){
												$sql = $sql."".dbformat($val).",";
											//	$xtest = $xtest."".dbformat($val).",";
										}
							
							}
							
					
							//prepare sql statement before excecute
							$sql = $insert.$sql." null , null )";
							//wlog(" insert: ".$sql." [ ".$result." ]");
							
							 
							//$xtest = $xtest." null , null ),";
							//wwrite( $xtest , $fn );
							$result = $dbconn->executeUpdate($sql);
							if($result != 1){
								$badlist++;
							}
					 		
						//   wlog("excel row [".$row."]  val : ".$ttt );
						  $count++;	
				}
		     
					/*
			//replace last comma with semi colon
			 * not work on linux 
			$path = dirname(__FILE__) .'/temp/'.$fn.".sql";
			$str=file_get_contents($path); 	
			$str=substr_replace($str,";",-1);	
			file_put_contents($path, $str);
			wwrite("\r\nCOMMIT;",$fn);
			
			
		
		
			  $cmd = 'mysql -u '.$db_username.' -p'.$db_password.' -h '.$db_server_ip.' '.$db_name.'  < '.$path;
			  $output = shell_exec($cmd);
			 // echo $cmd;
			*/
				
			$chsql = "";
			$whsql = "";	    
			
			$size =  count($chdup);
			
		      for( $i=0; $i< $size ; $i++){
		       	wlog( $chdup[$i]['check']);
		       	
		       		$a = $chdup[$i]['check'];
		        	$chsql = $chsql.",".$a;
		        	
		        	if( $i == 0){
		        		$whsql = "WHERE a.".$a." = b.".$a." ";		        		
		        	}else{
		        		$whsql = $whsql."AND a.".$a." = b.".$a." ";	
		        	}
		        	
		      }
		   
		        //wlog( "check condition : ".$chsql);
		        //wlog(  "where condition : ".$whsql);
		     
		    
		        //substring first comma ,
		        $chsql =  substr( $chsql , 1 );
		        
				//check in list (excel) duplicate
					$sql = " UPDATE tmp_table".$key." a ". 
					//			" , ( SELECT min(seq) as seq ,first_name , last_name , tel1".
								" , ( SELECT min(seq) as seq , ".$chsql.   
								" FROM tmp_table".$key."  ".
								" GROUP BY ".$chsql." ) b".
								" SET a.excel_dup = 1 ";
					
								$sql = $sql."".$whsql;
								
								/*
								" WHERE a.first_name = b.first_name".
								" and a.last_name = b.last_name".
								" and a.tel1  = b.tel1  ".
								*/
					$sql = $sql." and a.SEQ <> b.SEQ ";
					//wlog("inlist sql : ".$sql);
					 $dbconn->executeUpdate($sql);
					
					
					//check in database duplicate
					/*
					$sql = "UPDATE tmp_table".$key." tmp , t_calllist c".
								" SET tmp.calllist_dup = 1 ".
								" WHERE tmp.first_name = c.first_name ".
								" and tmp.last_name = c.last_name ".
								" and tmp.tel1  = c.tel1 ";
					*/
					
						$sql = "UPDATE tmp_table".$key." a , t_calllist b".
									" SET a.calllist_dup = 1 ";
						$sql = $sql."".$whsql;
						/*
								" WHERE a.first_name = c.first_name ".
								" and tmp.last_name = c.last_name ".
								" and tmp.tel1  = c.tel1 ";
					*/
						
					//wlog("indb sql : ".$sql);
				//	 $dbconn->executeUpdate($sql);
				 
				 $inlist = 0;
				 $indb = 0;
				 $sql = "SELECT COUNT(excel_dup) AS inlist , COUNT(calllist_dup) AS indb FROM tmp_table".$key;
				 $result = $dbconn->executeQuery($sql);
				 while($rs=mysql_fetch_array($result)){   
				 		$inlist = $rs['inlist'];
				 		$indb  = $rs['indb'];
				 }
			
				  	
				     $sql = " UPDATE t_import_list SET ".
				     			" total_records = ".dbNumberFormat($count).",".
								" bad_list = ".dbNumberFormat( $badlist ).",". 
								" inlist_dup = ".dbNumberFormat($inlist).",".
								" indb_dup = ".dbNumberFormat($indb)." ".
								" WHERE import_key =  ".dbformat($key)." ";
				  	 $dbconn->executeUpdate($sql);

				  		
			$dbconn->dbClose();	 
			
			$newlist = $count - ( $badlist + $inlist + $indb ); 
			$data = array("result"=>"success" , "total"=> $count , "newlist" => $newlist , "bad"=> $badlist, "inlist"=> $inlist ,"indb"=> $indb );
			echo json_encode( $data ); 
				  
			
	}
	
	function write(){
		
		$tabname = "tmp_test";
			wwrite("SET NAMES utf8;");
			wwrite("DROP TABLE IF EXISTS `".$tabname."`;");
			wwrite("CREATE TABLE `".$tabname."`(");
			wwrite("`seq` int(7) DEFAULT NULL,");
			wwrite("`first_name` varchar(255) DEFAULT NULL");
			wwrite(") ENGINE=InnoDB DEFAULT CHARSET=utf8;");
			wwrite("BEGIN;");
			wwrite("INSERT INTO `".$tabname."` VALUES (1,'helloworld1'),(2,'helloworld2'); ");
			wwrite("INSERT INTO `".$tabname."` VALUES (3,'helloworld3'),(4,'helloworld4'); ");
			wwrite("COMMIT;");
		
	}
	
	function search(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     //wlog( $tmp );
	     
				
				//find search value
				//pattern is search_dynamic_field_name
	      	 $search = "";
	          foreach( $tmp as  $key => $value ){
	          		if (preg_match('/^search/', $key , $match )) {
	          				//wlog($key."|".$value."|".$match[0]); 
	          				//wlog( $field );
	          				//array_push( $field , $search );
	          				if( $value != "" ){
		          				$field = substr( $key , 7 );		          		
		          				$search = $search." AND ".$field." LIKE '".$value."%' ";
	          				}
	          			
	          		}
	          }
	
	  	   //list maintenance
			$fields = array("calllist_id"); //system field ( PK )
			//find column first
			$sql = " SELECT field_name ".
						" FROM t_import_list_field ".
						" WHERE field_name != '0' ".
						" AND import_id  = ".dbNumberFormat($tmp['impid'])." ".
						" ORDER BY caption_index ";
			wlog("[callList_process][detail] find dynamic column sql : ".$sql);
			
			$result = $dbconn->executeQuery($sql);
			$count = 0;
			while($rs=mysql_fetch_array($result)){
					array_push( $fields , $rs['field_name'] );
					$tmp1[$count] = array(
						"header" => nullToEmpty($rs['field_name']),
					);
					$count++;
					
			}
			
			//status field for set do not call
			$tmp1[$count] = array("header"=>"Do not call");
			array_push( $fields , "status" );
		 
			//second find data with dynamic field	
			//get dynamic field  from db
			$field = implode(",", $fields);
			$sql =  "SELECT ".$field." ".
						" FROM t_calllist ".
						" WHERE import_id = ".dbNumberFormat($tmp['impid'])." ".$search.
						" LIMIT 0, 100 ";
			
	         wlog("[callList_process][search] sql : ".$sql);
			
		    $fieldlength = count($fields); 
		    $count = 0;
		    $result = $dbconn->executeQuery($sql);
		    while($rs=mysql_fetch_row($result)){   
			   $a = array();
		    	for($i=0; $i< $fieldlength ;$i++){
		    			$a['f'.$i] = nullToEmpty($rs[$i]);
		    	}
		    	 $tmp2[$count]  = $a;
		    	$count++;
			}
	          
			$dbconn->dbClose(); 
		    $res = array("header"=>$tmp1, "data"=>$tmp2 );
			echo json_encode($res);   
			
	}

	
		//show campaign for agent
	function init(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
  			$sql = " SELECT campaign_id,campaign_name,campaign_detail,start_date,end_date,status". 
						" FROM t_campaign ".
  						" WHERE campaign_id IN ".
  									" ( SELECT campaign_id FROM t_calllist_agent WHERE agent_id = ".dbNumberFormat($tmp['uid'])."  ) ". 
						" ORDER BY campaign_name ";
  			
  			wlog("[call-pane_process][init] sql :".$sql);
  			
			$count = 0;    
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			
			  	$data[$count] = array(
						        "cmpid"  => nullToEmpty($rs['campaign_id']),
								"cmpName"  => nullToEmpty($rs['campaign_name']),
							    "cmpDetail"  => nullToEmpty($rs['campaign_detail']),
							    "cmpStartDate"  => dateDecode($rs['start_date']),
						  	 	"cmpEndDate"  => dateDecode($rs['end_date']),
						  		"cmpStatus"  => nullToEmpty($rs['status'])
						);   
				$count++;  
			}
		    if($count==0){
			$data = array("result"=>"empty");
			} 
			 
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
	
	}
	
	//query call list for agent
	function query(){
		
	//	$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	    $page = 0;
	   	$pagelength = 5; //row per page should be 12
	     if( isset($_POST['page'])){
	    	 $page =  ( intval($_POST['page']) - 1 ) * $pagelength;
	     }
	     
  			$sql = "  SELECT import_id , list_name , list_detail , i.create_date , first_name , last_name , total_records   ".
						" FROM t_import_list  i LEFT OUTER JOIN t_agents a ON i.create_user = a.agent_id ".
  						" WHERE list_name IS NOT NULL ".
						" ORDER BY create_date DESC ".
  						" LIMIT ".$page." , ".$pagelength; 
  			
  			wlog("[callList_process][query] query sql : ".$sql);
  			$count = 0;    
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			  	$data[$count] = array(
			  	      			"impid"  => nullToEmpty($rs['import_id']),
						        "lname"  => nullToEmpty($rs['list_name']),
								"ldetail"  => nullToEmpty($rs['list_detail']),
							    "cdate"  => getDatetimeFromDatetime($rs['create_date']),
			  	   				"cuser"  => nullToEmpty($rs['first_name']." ".$rs['last_name']),
			  					"total"  => nullToEmpty($rs['total_records']),
			  					"incamp" => countCampaign( $rs['import_id'] ),
						);   
				$count++;  
			}
		    if($count==0){
				$data = array("result"=>"empty");
			} 
			
			$totallist = 0;
			$sql = "SELECT COUNT(import_id) AS totallist FROM t_import_list WHERE list_name IS NOT NULL ";
			 $result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){   
				$totallist = $rs['totallist'];
			}
			 
			$data = array("imp"=>$data, "totallist"=> $totallist);
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
					
	}
	
	
	function countCampaign( $impid ){
		
		$dbconn = new dbconn;
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     

  			$sql = " SELECT l.campaign_id , c.campaign_name  ".
						" FROM t_campaign_list l LEFT OUTER JOIN t_campaign c ON l.campaign_id = c.campaign_id ".
						" WHERE import_id = ".dbNumberFormat($impid);
  			
			$count = 0;    
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			  	$data[$count] = array(
			  	      			"cmpid"  => nullToEmpty($rs['campaign_id']),
						        "cmpname"  => nullToEmpty($rs['campaign_name'])							
						);   
				$count++;  
			}
		    if($count==0){
				$data = array("result"=>"empty");
			} 
			 
			return $data;
			
		
	}
	
     //not used ?
	function detailx(){
		//$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	     	$sql = "  SELECT list_id,list_name,list_desc,status ".
						" FROM t_list ".
	     				" WHERE list_id = ".dbNumberFormat( $_POST['id'] )." ";
						" ORDER BY create_date";
  			
			$count = 0;
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			  	$tmp1 = array(
						        "lid"  => nullToEmpty($rs['list_id']),
								"lname"  => nullToEmpty($rs['list_name']),
							    "ldesc"  => nullToEmpty($rs['list_desc']),
							    "lstatus"  => nullToEmpty($rs['status']),
						);   
				$count++;  
			}
		    if($count==0){
				$tmp1 = array("result"=>"empty");
			} 
			 
			$data = array("data"=>$tmp1);
		
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
					
	}
	
	 function save(){
	  
				$tmp = json_decode( $_POST['data'] , true); 
			 
				$dbconn = new dbconn;  
				$res = $dbconn->createConn();
				if($res==404){
				    $res = array("result"=>"error","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
				}
		
				$sql = "SELECT list_id FROM t_list WHERE list_id = ".dbformat($tmp['lid'])." ";
		    
				$result = $dbconn->executeQuery($sql); 
				if($rs=mysql_fetch_array($result)){   
					
				   //update   
					$sql = "UPDATE t_list SET ".
						        "list_name =".dbformat( $tmp['listName']).",".
							    "list_desc =".dbformat( $tmp['listDesc']).",".	
					 		  	"status =".dbNumberFormat( $tmp['listStatus']).",".	
							    "update_date =NOW(),".
							    "update_user =".dbformat( $tmp['uid'])." ".
							    "WHERE list_id = ".dbformat( $tmp['cmpid'])." ";	
					$dbconn->executeUpdate($sql); 
					 
				}else{
				   //insert
				   $sql = " INSERT INTO t_list( list_name,list_desc, status, create_user, create_date ) VALUES ( ".
					   		   " ".dbformat( $tmp['listName'])." ".
							   ",".dbformat( $tmp['listDesc'])." ".
				   	   		   ",".dbNumberFormat( $tmp['listStatus'])." ".
							   ",".dbNumberFormat($tmp['uid'])." , NOW() )  "; 
					$dbconn->executeUpdate($sql); 
				}		
			
   			
            $dbconn->dbClose(); 
		    $res = array("result"=>"success");
			echo json_encode($res);   
	  
	}
	
	

//query call list for agent
	function query_importList(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
  			$sql = "  SELECT import_id,list_id,file_name,temp_name,file_size,file_path,create_date ".
						" FROM t_import_list ".
  						" WHERE list_id = ".dbNumberFormat($tmp['lid'])." ".
						" ORDER BY create_date";
  			
			$count = 0;    
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			
			  	$data[$count] = array(
			  	      			"impid"  => nullToEmpty($rs['import_id']),
						        "lid"  => nullToEmpty($rs['list_id']),
			  	 				"fsize"  => nullToEmpty($rs['file_size']),
								"fname"  => nullToEmpty($rs['file_name']),
							    "cdate"  => getDatetimeFromDatetime($rs['create_date']),
						);   
				$count++;  
			}
		    if($count==0){
			$data = array("result"=>"empty");
			} 
			 
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
					
	}
	
	function upload(){
		 wlog("[callList_process][upload] Start upload ");
	
		 /* clear temp database table */
	 	 removeTemp();
	 	 wlog("[callList_process][upload] remove temp : success ");
		 /* */
		 
		if (!empty($_FILES))
    	{
    		
    	 		   if ( $_FILES["file"]["error"] > 0)
					{
						  	wlog("[Error][callList_process][upload] Error code : " . $_FILES["file"]["error"] );
					  	    switch($_FILES["file"]["error"] ) { 
					  	    	case 1 : wlog("[callList_process][upload] Error : The uploaded file exceeds the upload_max_filesize directive in php.ini");
					  	    				   break;
					  	    	case 2 : wlog("[callList_process][upload] Error :The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form");
					  	    				   break;
					  	    	case 3 : wlog("[callList_process][upload] Error :  The uploaded file was only partially uploaded");
					  	    				  break;
					  	    	case 4 : wlog("[callList_process][upload] Error :  No file was uploaded");
					  	    				  break;
					  	  		case 5 : wlog("[callList_process][upload] Error : Missing a temporary folder");
					  	    				   break;
					  	    	case 6 : wlog("[callList_process][upload] Error : Failed to write file to disk");
					  	    				  break;
					  	    	case 7 : wlog("[callList_process][upload] Error : File upload stopped by extension");
					  	    				  break;
					  	     	default : wlog("[callList_process][upload] Error : Unknown upload error");
					  	    				  break;
					  	   }
						   	
						  	
					} else{
						wlog("[callList_process][upload] file ok to upload ");
						/*
						 echo "BookingID: ".$_POST['bookid'];
					     echo   "File ID : ".getCurrentDateTime()."_".$_POST['uuuid']."<br/>";
						  echo "Upload: " . $_FILES["file"]["name"] . "<br>"; // read file name
						  echo "Type: " . $_FILES["file"]["type"] . "<br>";   
						  echo "Size: " . display_filesize($_FILES["file"]["size"]) ." <br>";
						  echo "Stored in: " . $_FILES["file"]["tmp_name"];
						  */
						 
						  $filename = basename($_FILES['file']['name']);
						  $fileid = getCurrentDateTime();
						  $filesize = display_filesize($_FILES["file"]["size"]);
						  $filepath = str_replace("\\","/",dirname(__FILE__)).'/profiles/attach/';
						  $filetype = $_FILES["file"]["type"];

						 // $fileextension = substr($filename, strrpos($filename, '.')+1);
						
							$fileextension = explode("/", $filetype);
							 wlog("[callList_process][upload] check file type : ".$filetype);
								
							if($fileextension[0] == "application"){
									$ext = "xls";
									wlog("[callList_process][upload] file type is excel : ".$fileextension[0]);
							}else if($fileextension[0] == "text"){
									$ext = "text";
									wlog("[callList_process][upload] file type is text : ".$fileextension[0]);
							}else{
									$ext = "file not support";
									wlog("[callList_process][upload] file extension not support : ".$fileextension[0]);
							}
						  
							
				 
						 $tempFile = $_FILES['file']['tmp_name'];
			        	 $targetFile = getCurrentDateTime()."_".$_FILES['file']['name'];
			        	 
			        	 move_uploaded_file($tempFile, "profiles/attach/".$filename);
						 wlog("[callList_process][upload] file upload success ");
						
				        $dbconn = new dbconn;  
				        $dbconn->createConn();
						$res = $dbconn->createConn();
					 	if($res==404){
								    $res = array("result"=>"dberror","message"=>"Can't connect to database");
								    echo json_encode($res);		
								    exit();
					     }
	     
				     
				     //generate key used for temp file
				     //if key on hands over 1 day every link file will be remove 
				     $key = uniqid();
				    
					//insert import file
					 $sql = " INSERT INTO t_import_list ( file_name , import_key , `status` , temp_table_name , file_size , file_type , file_path , create_user , create_date) VALUES (".							
							     " ".dbformat( $filename )." ".
					    		 ",".dbformat( $key )." ".			
					 	 		 ", 0 ". //first status of import list ( not ready ) when set list name status will 1 a  			
							     ",".dbformat( "tmp_table".$key )." ".						
							     ",".dbformat( $filesize )." ".
							     ",".dbformat( $filetype )." ".
							     ",".dbformat( $filepath )." ".
							     ",".dbNumberFormat($_POST['uid'])." , NOW() )  ";
					
					 wlog("[callList_process][upload] upload file sql : ".$sql);
					$dbconn->executeUpdate($sql); 
			    	$dbconn->dbClose();	 
			       
			    	 
			    	//if xls convert to csv
			    	wlog("[callList_process][upload] Convert excel key : [".$key."] to csv ");
			    	if($ext == "xls"){
			    			require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
			    			/*
			    			$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;
							$cacheSettings = array( 'memoryCacheSize' => '1GB');
							PHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);
							*/
			    			
			    			try {
			    			
				      		$savepath = dirname(__FILE__) .'/temp/'.$key.".csv";
							$excel = PHPExcel_IOFactory::load($filepath."".$filename);
							$writer = PHPExcel_IOFactory::createWriter($excel, 'CSV');
							$writer->setDelimiter("|");
							$writer->setEnclosure("");
							$writer->save($savepath);
							
							} catch (Exception $e) {
								wlog("[callList_process][upload] Convert excel key : [".$key."]  ERROR : ".$e->getMessage());
							}
			    	}
			    	wlog("[callList_process][upload] Convert excel key : [".$key."] to csv success");
				  	 
					//return result 
						$data = array(  "fname"=>$filename ,"key"=>$key ,"ftype"=> $filetype ,"fsize"=> $filesize , "fext"=>$ext ,"sheet"=>$sheet);
						 echo json_encode( $data ); 
					}//end else
					
          
    		}//end if
	}
	
	function afterUpload(){
		
		//input is path file of excel
		$tmp = json_decode( $_POST['data'] , true); 
			
		$impid  = $_POST['key'];
		wlog("[afterUpload][get key] : ".$impid );
	
			$dbconn = new dbconn;	
	        $dbconn->createConn();
			$res = $dbconn->createConn();
		 	if($res==404){
					    $res = array("result"=>"dberror","message"=>"Can't connect to database");
					    echo json_encode($res);		
					    exit();
		     }
		     
		    //init system field 
			$sql = " SELECT field_name, field_alias_name, field_detail ". 
						" FROM  ts_field_list ".
	  					" WHERE status = 1 ";
	  			
			wlog("[afterUpload][init system field] sql : ".$sql );
			$count = 0;		
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			  			$tmp1[$count] = array(
			  				"id" => nullToEmpty($rs['field_name']),
			  				"alias" => nullToEmpty($rs['field_alias_name']),
			  				"type" => nullToEmpty($rs['field_detail']),
						);   
				$count++;  
			}
		    
			//check file path and extension 
  			$sql = "  SELECT file_path , file_name , file_type  ".
						" FROM t_import_list ".
						" WHERE import_key = ".dbformat( $impid );
  			
  			wlog("[afterUpload][check file path and extension ] sql : ".$sql );
  			
  	   		$file_path = "";
  	   		$file_type = "";
			//read path of excel from database
		    $result = $dbconn->executeQuery($sql);
			if($rs=mysql_fetch_array($result)){  
				$file_path = $rs['file_path'].$rs['file_name'];
				$file_type = $rs['file_type'];
			}
			//check file exist
			if( file_exists($file_path) == 1){
		
				wlog("[afterUpload][file exist] on path : ".$file_path );
				//check file type
				$extension = explode("/", $file_type);
				if($extension[0] == "application"){
			
						//type excel
						wlog("[afterUpload][file type] is excel : ".$file_type); //log
						
						$savepath = dirname(__FILE__) .'/temp/'.$impid.".csv";
						
						$tmp2 = csvReadHeader( $savepath , "|" );
						
						$sql = " UPDATE t_import_list SET field_delimiter = '|' ".
									" WHERE import_key = ".dbformat( $impid )." ";
						wlog("[afterUpload][update field_delimiter ] sql : ".$sql );
						$dbconn->executeUpdate($sql);
									
				}else if($extension[0] == "text"){
						//type text
						wlog("[afterUpload][file type] is text : ".$file_type." delimiter : ".$delimiter);
						//check user selected delimiter
							$delimiter = "";
							switch( $tmp['field_delimiter']  ){
								case "tab" 			   
										: $delimiter = "\t"; break;
								case "semicolon"
										: $delimiter = ";"; break;
								case "comma"
										: $delimiter = ","; break;
								case "space"
										: $delimiter = "\t"; break;
								case "other"
										: $delimiter = $tmp['delimiter_other']; break;
							}
				
						$tmp2 = csvReadHeader( $file_path , $delimiter );
						$savepath = dirname(__FILE__) .'/temp/'.$impid.".csv";
						
						//move file to temp
						//check exist if not copy
						if( file_exists($savepath) != 1){
								copy( $file_path , $savepath );
						}
					
						$sql = " UPDATE t_import_list SET field_delimiter = ".dbformat($delimiter)." ".
									" WHERE import_key = ".dbformat( $impid )." ";
						wlog("[afterUpload][update field_delimiter ] sql : ".$sql );
						$dbconn->executeUpdate($sql);
						
						
				}//end  if extension
				
			}else{
				wlog("[Error][afterUpload][file not found] on path : ".$file_path );
			}
			
			
	
			//type excel
			/*
	    	$time_start = microtime(true);
			error_reporting(E_ALL);
			ini_set('display_errors', TRUE);
			ini_set('display_startup_errors', TRUE);
			date_default_timezone_set('Asia/Bangkok');
			
			require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
			
				
      		$path = dirname(__FILE__) .'/temp/'.$impid.".csv";
			$excel = PHPExcel_IOFactory::load($file_path);
			$writer = PHPExcel_IOFactory::createWriter($excel, 'CSV');
			$writer->setDelimiter("|");
			$writer->setEnclosure("");
			$writer->save($path);
			$tmp2 = csvReadHeader( $path , "|" );
			*/
			
			//type csv,text
			//check delimiter
		/*
				$delimiter = "";
				switch( $tmp['field_delimiter']  ){
					case "tab" 			   
							: $delimiter = '\t'; break;
					case "semicolon"
							: $delimiter = ';'; break;
					case "comma"
							: $delimiter = ','; break;
					case "space"
							: $delimiter = '\t'; break;
					case "other"
							: $delimiter = $tmp['delimiter_other']; break;
					
				}
				
				wlog( "delimiter : ".$delimiter );
			$tmp2 = csvReadHeader( $path );
			*/
			
	 	    //$fileName = "callList.xls";
			//$objPHPExcel = PHPExcel_IOFactory::load("profiles/attach/".$fileName );
			//wlog( $excelfile_path );

//			$objPHPExcel = PHPExcel_IOFactory::load( $excelfile_path );
			//get header
			/*
			$worksheet = $objPHPExcel->setActiveSheetIndex(0);
		   $count = 0;
			foreach ($worksheet->getRowIterator() as $row) {
				$cellIterator = $row->getCellIterator();
				$cellIterator->setIterateOnlyExistingCells(false);
			
					 foreach ($cellIterator as $cell) {
					 		wlog( $cell->getValue() );
						 		$tmp2[$count] = array(
					  				"seq" => nullToEmpty($count),
					  				"value" => nullToEmpty($cell->getValue())
								);   
								$count++;  
					
				   		//	 echo 'value: ' . $cell->getValue() . '' . "<br/>";
					  }
		  
				break;
			}
			*/

			/** fix version 1 **/
			/*
			wlog("update version 1 ");
			$objPHPExcel = PHPExcel_IOFactory::load($excelfile_path);
			$worksheet = $objPHPExcel->setActiveSheetIndex(0);
		     
		     //start read excel
		     	$highestRow            = $worksheet->getHighestRow(); // e.g. 10
			   	$highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
				$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
				//echo "total remain column ".$highestColumnIndex;
			
				
	  			// $row == 1 don't map header 
	  			$count = 0; 
	  			wlog("[excel process] highestRow : ".$highestRow);
	  			wlog("[excel process] highestColumn : ".$highestColumn);
	  			wlog("[excel process] highestColumnIndex : ".$highestColumnIndex);
	  		
	  			//wwrite("INSERT INTO `tmp_table".$key."` VALUES " , $fn);
	  			
				//for ($row = 1; $row < 1; ++$row) {
							for ($col = 0; $col < $highestColumnIndex; ++$col){
								
									$cell = $worksheet->getCellByColumnAndRow($col, 1 );
									$val = $cell->getValue();
									wlog( "header ".$val );
									
									$tmp2[$count] = array(
					  				"seq" => nullToEmpty($count),
					  				"value" => nullToEmpty($cell->getValue())
									);   
									$count++;  
									
									
							}
			
				//}
		       */
				/** end fix **/
			
			//csv 
			
			
				
							
				//excel to csv
				
					
							
		
			
		 	$data = array("init"=>$tmp1,"header" => $tmp2 );		 	
			echo json_encode( $data ); 
			
			$dbconn->dbClose();	 
		
		
	}
	
	//csvReader( null );
	function csvReadHeader( $file_path , $delimiter ){
	
		//check file exist
			wlog( "[callList_process][csvReader] get file path : ".$file_path." and delimiter ".$delimiter);
			
			if( file_exists($file_path) == 1){
				wlog( "[callList_process][csvReader] file exist");
			}else{
				wlog( "[callList_process][csvReader] file  not found");
			}
		
			
		$file = fopen($file_path,"r") or die("can't open file");
		
	//	wlog( file_get_contents($file_path, true) );
	
		/** remove bom **/
		$line = str_to_utf8(fgets($file));
		wlog("read line : ".$line);
		
		if (strpos($line,"\xef\xbb\xbf") !== FALSE) {
		  $data = substr($line, 3);
		  wlog("bom detect and remove ".$data);
		}else{
			$data = $line;
		}

			wlog("data : ".$data);
			$header = explode($delimiter , $data);
		  	
				$size = count( $header );
			wlog("size".$size);
					wlog( $header[0] );
				for($i=0; $i < $size ; $i++){
					
					wlog( $header[$i] );
					
						$tmp2[$i] = array(
					  				"seq" => nullToEmpty($i),
					  				"value" => nullToEmpty($header[$i])
									);   
					
				}
		  
		/*  
		}else{
			wlog("bom not found ".$data);
			if($data = fgetcsv($file,0,$delimiter)) { 		
			 	   $num = count($data);
				   for ($c=0; $c < $num; $c++) {
			            	wlog( $data[$c]);
			            	$tmp2[$c] = array(
			  				"seq" => nullToEmpty($c),
			  				"value" => nullToEmpty($data[$c])
							);   
			        }
			 }//end if
		}
		*/
	
	 
		/*
		 $bom = pack('H*','EFBBBF');
   		 $text = preg_replace("/^$bom/", '', $line);

		wlog("remove bom : ".$text);
		*/
		//get header
		
			 //while($data = fgetcsv($file,0, "|")) {
			// if($data = fgetcsv($file,0, ";")) {
		
	
		fclose($file);
		return $tmp2;

	}
	
	function testExcel(){
		
		
		error_reporting(E_ALL);
		ini_set('display_errors', 1);
		ini_set('display_startup_errors', TRUE);
		date_default_timezone_set('Asia/Bangkok');
		
		   $time_start = microtime(true);
		
		//echo dirname(__FILE__);
		/** PHPExcel */
		//require_once 'plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
		require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
		
		
 	    $fileName = "FakeName_50000_Thai.xlsx";
 	   // $fileName = "CallListABC.xls";
		$objPHPExcel = PHPExcel_IOFactory::load("profiles/attach/".$fileName );
		
		echo $objPHPExcel->getSheetCount();
		
		 	//Create a variable for end time
	$time_end = microtime(true);
	//Subtract the two times to get seconds
	$time = $time_end - $time_start;
	echo 'Script took '.$time.' seconds to execute';
		
		/*
		foreach ($objPHPExcel->getWorksheetIterator() as $worksheet){
			
				$test = $worksheet->getHighestDataRow();
			$worksheetTitle     = $worksheet->getTitle();
			$highestRow         = $worksheet->getHighestRow(); // e.g. 10
			$highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
			$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
			
			$count = 0;
			/*
			for ($row = 0; $row <= $highestRow; $row++) {
			//	echo "highestRow".$highestRow;
						for ($col = 0; $col < $highestColumnIndex; $col++) {
						//	echo "highestCOl".$highestColumnIndex;
							$val = $worksheet->getCellByColumnAndRow($col, $row)->getValue();
							if( $val != ""){
									$count++;
									break;
							}
						
						}
						
						
						
			}
 		echo "end sheet ".$count."<br/>";
 		
		
		$end_start = microtime(true) - $start_time;
		echo $test."<|".$worksheetTitle."|".$highestRow."|>".$highestColumnIndex;
		echo "time : ".$end_start;
			
			
		}
		*/
		
	}
	
	//prepare
   function insertdb( $fileName ){
	
	
   //Create a variable for start time
    $time_start = microtime(true);

  //https://blog.mayflower.de/561-Import-and-export-data-using-PHPExcel.html
 
   error_reporting(E_ALL);
   
   require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
  // require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel/IOFactory.php';
 
   
   //test
     $fileName = "callList.xls";
		$objPHPExcel = PHPExcel_IOFactory::load("profiles/attach/".$fileName );
	
	
	foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
		$worksheetTitle     = $worksheet->getTitle();
		$highestRow         = $worksheet->getHighestRow(); // e.g. 10
		$highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
		$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
		$nrColumns = ord($highestColumn) - 64;
		///echo "<br>The worksheet ".$worksheetTitle." has ";
		////echo $nrColumns . ' columns (A-' . $highestColumn . ') ';
		//echo ' and ' . $highestRow . ' row.';
		//echo '<br> <table border="1"><tr>'; 
		//if insert fail what r u doing!!!
		
		$dbconn = new dbconn;	
	   //$ignore_header = true;
	    $success=0;
		for ($row = 2; $row <= $highestRow; ++$row) {
			//echo '<tr>';
		    
			$cellData = array();
			for ($col = 0; $col < $highestColumnIndex; ++ $col) {
				$cell = $worksheet->getCellByColumnAndRow($col, $row);
				$val = $cell->getValue();
				//$dataType = PHPExcel_Cell_DataType::dataTypeForValue($val);
				//cho '<td>' . $val . '<br>(Typ ' . $dataType . ')</td>';
				  //echo '<td>' . $val .'</td>';
				  array_push ( $cellData, $val );
				   
			}
			//echo '</tr>';
			$import_id = 1;
	        $import_userid = 22;
		 
		 
					if( isset($cellData[0]) && isset($cellData[1]) && isset($cellData[2]) && isset($cellData[3]) && isset($cellData[4]) ){
					//	echo "<br/> check empty[0] ".$cellData[0]."".$cellData[1]."".$cellData[2]."".$cellData[3]."".$cellData[4]."";
					  $sql = " INSERT INTO t_calllist( import_id, first_name , last_name , tel1 , tel2 , address , import_dt , import_userid ) VALUES ( ". "  
							   ".$import_id.",
							   ".dbformat( $cellData[0] ).",
							   ".dbformat( $cellData[1] ).",
							   ".dbformat( $cellData[2]).",
							   ".dbformat( $cellData[3]).",
							   ".dbformat( $cellData[4]).",
							   NOW() ,
							   ".$import_userid.")  ";
						$dbconn->executeUpdate($sql); 
						$success = $success +1;
					  
					}
				
			}//end for2
		
			
		 
		echo "<br/> record success : ".$success."<br/>";
		$dbconn->dbClose(); 
		//echo '</table>';  
		//echo 'end loop--------------------------------------';
		
	   } 
	  
	   	//Create a variable for end time
	$time_end = microtime(true);
	//Subtract the two times to get seconds
	$time = $time_end - $time_start;
	echo 'Script took '.$time.' seconds to execute';
 
     
	}
	 
	
	function delete(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
  			$sql = "  DELETE FROM t_list".
  						" WHERE list_id = ".dbNumberFormat($tmp['lid']);

		    $result = $dbconn->executeUpdate($sql);
		
		    if($result!=1){
				$data = array("result"=>"fail");
			}else{
				$data = array("result"=>"success");
			} 
		
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
		
	}
	
	function query_viewlist(){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
        $dbconn->createConn();
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	     
	
	     	$sys_fields = array("excel_dup","calllist_dup");
	     
 			$sql = "  SELECT ".
						" FROM t_list ".
	     				" WHERE list_id = ".dbNumberFormat( $_POST['id'] )." ";
						" ORDER BY create_date";
  			
			$count = 0;
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
			
			  	$tmp1 = array(
						        "lid"  => nullToEmpty($rs['list_id']),
								"lname"  => nullToEmpty($rs['list_name']),
							    "ldesc"  => nullToEmpty($rs['list_desc']),
							    "lstatus"  => nullToEmpty($rs['status']),
						);   
				$count++;  
			}
		    if($count==0){
				$tmp1 = array("result"=>"empty");
			} 
  			
  			
  			
			 
		 	$dbconn->dbClose();	 
			echo json_encode( $data ); 
		
	}

	//helper function from  newlistdw,badlistdw,duplistdw,dupdbdw
	function exportList( $action ){
		
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
	 	if($res==404){
				    $res = array("result"=>"dberror","message"=>"Can't connect to database");
				    echo json_encode($res);		
				    exit();
	     }
	   
	     $sql =" SELECT caption_name , field_name FROM t_import_list_field ".
					" WHERE import_id = ( SELECT import_id FROM t_import_list WHERE import_key = ".dbformat($tmp['key'])." )".
					" AND field_name != '0' ".
					" ORDER BY caption_index ";
	   		wlog("[callList_process][exportList] sql : ".$sql);

			$fields = array();
			$caption = array();
		    $result = $dbconn->executeQuery($sql);
			while($rs=mysql_fetch_array($result)){   
				array_push( $caption , $rs['caption_name']);
				array_push( $fields , $rs['field_name'] );
			}
			
			$field = implode(",", $fields);
	 		$sql =  "SELECT ".$field." ".
						" FROM tmp_table".$tmp['key'];
	 		 
			if( $action == "newlist"){
					$sql = $sql." WHERE excel_dup IS NULL AND calllist_dup IS NULL AND badlist IS NULL ";
			}else if($action == "badlist"){
					$sql = $sql." WHERE badlist = 1";
			}else if($action == "duplist"){
					$sql = $sql." WHERE excel_dup = 1";
			}else if($action == "dupdb"){ 
					$sql = $sql." WHERE calllist_dup = 1"; 
			}
	     			
			$sql = $sql." ORDER BY seq";
	 		wlog("[callList_process][exportList] sql : ".$sql);
	 		 $result = $dbconn->executeQuery($sql);	
				
				require_once dirname(__FILE__) . '/plugin/PHPExcel1.8.0/Classes/PHPExcel.php';
				// Instantiate a new PHPExcel object
				$objPHPExcel = new PHPExcel(); 
				// Set the active Excel worksheet to sheet 0
				$objPHPExcel->setActiveSheetIndex(0); 

				$worksheet = $objPHPExcel->getActiveSheet();
				//write header excel column
				$column = 'A';
				for($i=0; $i<count($fields); $i++ ){
					 $worksheet->setCellValue($column.'1', $caption[$i]);
					 $column++;
				}
				//set font bold for header 
				$column--;
				$worksheet->getStyle('A1:'.$column.'1')->getFont()->setBold(true);
				
				$count=2;
				while($rs = mysql_fetch_row($result)){ 
						$column = 'A';
					    for($i=0; $i<mysql_num_fields($result);$i++){  
						    	 $worksheet->setCellValue($column.$count, $rs[$i]);
							  	 $column++;
						  }
						 $count++;
				}//end while
			
					
				// Instantiate a Writer to create an OfficeOpenXML Excel .xlsx file
				$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel); 
				// Write the Excel file to filename some_excel_file.xlsx in the current directory
				$path = dirname(__FILE__) .'/temp/exportlist.xlsx';
				$objWriter->save($path);
				
				$data = array("result"=>"success");
			 	$dbconn->dbClose();	 
				echo json_encode( $data ); 
			
	}

	//Export lead to genesys
	function genesysExport(){
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
		$res = $dbconn->createConn();
		$genesys_amount = $tmp["genesys_amount"];
		$impid = $tmp["impid"];
		$uid = $tmp['uid'];
		$leadtype = $tmp['leadtype'];
		$error="";
	 	if($res==404){
			$res = array("result"=>"dberror","message"=>"Can't connect to database");
			echo json_encode($res);		
			exit();
	     }

		 if($genesys_amount=="" || !is_numeric($genesys_amount) || $genesys_amount<=0){
			$error .= "A amount is required.".PHP_EOL;
 		}
		 if($impid==""){
			$error .= "A impid is required.".PHP_EOL;
 		}
		if($error){
			$res = array("result"=>"error","message"=>$error);
			echo json_encode($res);		
			exit();
		}

		$max_per_round = 1000;
		$allpage = (ceil($genesys_amount / $max_per_round)-1);
		$count = 0;
		// $test = new OutboundGenesys();

		// var_dump($test->clearContactlist());

	     //Query lead remain from impid
		for ($round = 0; $round <= $allpage; $round++) {
			$start = $round * $max_per_round;
			$rowround = ($round+1) * $max_per_round;
			$max_round = ($genesys_amount<$rowround)?$genesys_amount-$start:$max_per_round;
			$sqlpage = "limit {$start} , {$max_round} ";
			$sql = " SELECT a.calllist_id as 'Customer ID', CONCAT(first_name,' ',last_name) as 'Name', tel1 as 'Phone', '' as 'Email'".
			// $sql = " SELECT a.calllist_id as 'Customer ID', CONCAT(first_name,' ',last_name) as 'Name', CONCAT('9',tel1) as 'Phone', 'parinya.pen@knowitsolution.com' as 'Email'".
					" from t_calllist a ".
					" left outer join t_calllist_integration ci on a.calllist_id = ci.calllist_id ".
					" where ci.genesys_id is null and a.import_id =  ".dbNumberFormat($impid).
					" order by a.calllist_id $sqlpage";
		    wlog("[callList_process][exportgenesys] sql : ".$sql);
	 		$result = $dbconn->executeQuery($sql);
			if(count($result)<=0) break;
			$data = array();
			while($rs=mysql_fetch_assoc($result)){
				// $tmprs = array_merge($rs,[
				// 	"Product Description"=> "",
				// 	"Past Due Days"=> "",
				// 	"Past Due Amount"=> "",
				// 	"Total Balance"=> "",
				// 	"Due Date"=> "",
				// 	"Email"=> ""
				// ]);
				$tmp = (object) [
					"data"=> $rs,
					"callable"=> true
				];
				array_push($data, $tmp);
				$count++;
			}
			$gene = new OutboundGenesys();
			$gene->setcontactListId($leadtype);
			$return_data = $gene->addContactlist($data);
			if(is_array($return_data) && count($return_data)>0){
				$insert_q = "INSERT INTO t_calllist_integration (calllist_id, genesys_id, genesys_contactListId, create_date, create_user) VALUES";
				foreach($return_data as $rdata){
					$insert_q .= " ( ".dbNumberFormat($rdata->data->{'Customer ID'}).", ".dbformat($rdata->id).", ".dbformat($rdata->contactListId).", NOW(), ".dbNumberFormat($uid)." ),";
				}
				$insert_q = rtrim($insert_q,",");
				wlog("[callList_process][exportgenesys] insertLog : ".$insert_q);
				$dbconn->executeUpdate($insert_q);
			}
		}
	// 	INSERT INTO tbl_name
	// 	(a,b,c)
	// VALUES
	// 	(1,2,3),
	// 	(4,5,6),
	// 	(7,8,9);
	//$object->{'Date Found'}
		if($count>0){
			$data = array("result"=>"success","message"=>"Export {$count} rows");
		} else {
			$data = array("result"=>"empty","message"=>"No records");
		}
			
		$dbconn->dbClose();
		echo json_encode($data);
	}

	//Clear lead genesys
	function genesysClear(){
		$tmp = json_decode( $_POST['data'] , true); 
		$dbconn = new dbconn;  
		$impid = $tmp["impid"];
		$leadtype = $tmp['leadtype'];
		$res = $dbconn->createConn();
	 	if($res==404){
			$res = array("result"=>"dberror","message"=>"Can't connect to database");
			echo json_encode($res);		
			exit();
	     }

		$gene = new OutboundGenesys();
		$gene->setcontactListId($leadtype);
		$result = $gene->clearContactlist();

		if(is_null($result)){
			$sql = "DELETE T1 FROM t_calllist_integration as T1".
					" LEFT JOIN t_calllist as T2 ON T1.calllist_id = T2.calllist_id".
					" WHERE T2.import_id = ".dbNumberFormat($impid)." and T1.genesys_contactListId = ".dbformat($leadtype);
			wlog("[callList_process][exportgenesys] clear : ".$sql);
			$dbconn->executeUpdate($sql);
			$data = array("result"=>"success","message"=>"Clear success");
		} else {
			$data = array("result"=>"error","message"=>$result->message);
		}
		$dbconn->dbClose();
		echo json_encode($data);
	}

	
?>