<?php
/**
 * WebChatApiTest
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace PureCloudPlatform\Client\V2;

use \PureCloudPlatform\Client\V2\Configuration;
use \PureCloudPlatform\Client\V2\ApiException;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * WebChatApiTest Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WebChatApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteWebchatDeployment
     *
     * Delete a WebChat deployment.
     *
     */
    public function testDeleteWebchatDeployment()
    {
    }

    /**
     * Test case for deleteWebchatGuestConversationMember
     *
     * Remove a member from a chat conversation.
     *
     */
    public function testDeleteWebchatGuestConversationMember()
    {
    }

    /**
     * Test case for deleteWebchatSettings
     *
     * Remove WebChat deployment settings.
     *
     */
    public function testDeleteWebchatSettings()
    {
    }

    /**
     * Test case for getWebchatDeployment
     *
     * Get a WebChat deployment.
     *
     */
    public function testGetWebchatDeployment()
    {
    }

    /**
     * Test case for getWebchatDeployments
     *
     * List WebChat deployments.
     *
     */
    public function testGetWebchatDeployments()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMediarequest
     *
     * Get a media request in the conversation.
     *
     */
    public function testGetWebchatGuestConversationMediarequest()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMediarequests
     *
     * Get all media requests to the guest in the conversation.
     *
     */
    public function testGetWebchatGuestConversationMediarequests()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMember
     *
     * Get a web chat conversation member.
     *
     */
    public function testGetWebchatGuestConversationMember()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMembers
     *
     * Get the members of a chat conversation..
     *
     */
    public function testGetWebchatGuestConversationMembers()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMessage
     *
     * Get a web chat conversation message.
     *
     */
    public function testGetWebchatGuestConversationMessage()
    {
    }

    /**
     * Test case for getWebchatGuestConversationMessages
     *
     * Get the messages of a chat conversation..
     *
     */
    public function testGetWebchatGuestConversationMessages()
    {
    }

    /**
     * Test case for getWebchatSettings
     *
     * Get WebChat deployment settings.
     *
     */
    public function testGetWebchatSettings()
    {
    }

    /**
     * Test case for patchWebchatGuestConversationMediarequest
     *
     * Update a media request in the conversation, setting the state to ACCEPTED/DECLINED/ERRORED.
     *
     */
    public function testPatchWebchatGuestConversationMediarequest()
    {
    }

    /**
     * Test case for postWebchatDeployments
     *
     * Create WebChat deployment.
     *
     */
    public function testPostWebchatDeployments()
    {
    }

    /**
     * Test case for postWebchatGuestConversationMemberMessages
     *
     * Send a message in a chat conversation..
     *
     */
    public function testPostWebchatGuestConversationMemberMessages()
    {
    }

    /**
     * Test case for postWebchatGuestConversationMemberTyping
     *
     * Send a typing-indicator in a chat conversation..
     *
     */
    public function testPostWebchatGuestConversationMemberTyping()
    {
    }

    /**
     * Test case for postWebchatGuestConversations
     *
     * Create an ACD chat conversation from an external customer..
     *
     */
    public function testPostWebchatGuestConversations()
    {
    }

    /**
     * Test case for putWebchatDeployment
     *
     * Update a WebChat deployment.
     *
     */
    public function testPutWebchatDeployment()
    {
    }

    /**
     * Test case for putWebchatSettings
     *
     * Update WebChat deployment settings.
     *
     */
    public function testPutWebchatSettings()
    {
    }
}
