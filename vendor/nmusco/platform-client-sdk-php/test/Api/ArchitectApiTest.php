<?php
/**
 * ArchitectApiTest
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace PureCloudPlatform\Client\V2;

use \PureCloudPlatform\Client\V2\Configuration;
use \PureCloudPlatform\Client\V2\ApiException;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * ArchitectApiTest Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ArchitectApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteArchitectEmergencygroup
     *
     * Deletes a emergency group by ID.
     *
     */
    public function testDeleteArchitectEmergencygroup()
    {
    }

    /**
     * Test case for deleteArchitectIvr
     *
     * Delete an IVR Config..
     *
     */
    public function testDeleteArchitectIvr()
    {
    }

    /**
     * Test case for deleteArchitectPrompt
     *
     * Delete specified user prompt.
     *
     */
    public function testDeleteArchitectPrompt()
    {
    }

    /**
     * Test case for deleteArchitectPromptResource
     *
     * Delete specified user prompt resource.
     *
     */
    public function testDeleteArchitectPromptResource()
    {
    }

    /**
     * Test case for deleteArchitectPromptResourceAudio
     *
     * Delete specified user prompt resource audio.
     *
     */
    public function testDeleteArchitectPromptResourceAudio()
    {
    }

    /**
     * Test case for deleteArchitectPrompts
     *
     * Batch-delete a list of prompts.
     *
     */
    public function testDeleteArchitectPrompts()
    {
    }

    /**
     * Test case for deleteArchitectSchedule
     *
     * Delete a schedule by id.
     *
     */
    public function testDeleteArchitectSchedule()
    {
    }

    /**
     * Test case for deleteArchitectSchedulegroup
     *
     * Deletes a schedule group by ID.
     *
     */
    public function testDeleteArchitectSchedulegroup()
    {
    }

    /**
     * Test case for deleteArchitectSystempromptResource
     *
     * Delete a system prompt resource override..
     *
     */
    public function testDeleteArchitectSystempromptResource()
    {
    }

    /**
     * Test case for deleteFlow
     *
     * Delete flow.
     *
     */
    public function testDeleteFlow()
    {
    }

    /**
     * Test case for deleteFlows
     *
     * Batch-delete a list of flows.
     *
     */
    public function testDeleteFlows()
    {
    }

    /**
     * Test case for deleteFlowsDatatable
     *
     * deletes a specific datatable by id.
     *
     */
    public function testDeleteFlowsDatatable()
    {
    }

    /**
     * Test case for deleteFlowsDatatableRow
     *
     * Delete a row entry.
     *
     */
    public function testDeleteFlowsDatatableRow()
    {
    }

    /**
     * Test case for getArchitectDependencytracking
     *
     * Get Dependency Tracking objects that have a given display name.
     *
     */
    public function testGetArchitectDependencytracking()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingBuild
     *
     * Get Dependency Tracking build status for an organization.
     *
     */
    public function testGetArchitectDependencytrackingBuild()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingConsumedresources
     *
     * Get resources that are consumed by a given Dependency Tracking object.
     *
     */
    public function testGetArchitectDependencytrackingConsumedresources()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingConsumingresources
     *
     * Get resources that consume a given Dependency Tracking object.
     *
     */
    public function testGetArchitectDependencytrackingConsumingresources()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingDeletedresourceconsumers
     *
     * Get Dependency Tracking objects that consume deleted resources.
     *
     */
    public function testGetArchitectDependencytrackingDeletedresourceconsumers()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingObject
     *
     * Get a Dependency Tracking object.
     *
     */
    public function testGetArchitectDependencytrackingObject()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingType
     *
     * Get a Dependency Tracking type..
     *
     */
    public function testGetArchitectDependencytrackingType()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingTypes
     *
     * Get Dependency Tracking types..
     *
     */
    public function testGetArchitectDependencytrackingTypes()
    {
    }

    /**
     * Test case for getArchitectDependencytrackingUpdatedresourceconsumers
     *
     * Get Dependency Tracking objects that depend on updated resources.
     *
     */
    public function testGetArchitectDependencytrackingUpdatedresourceconsumers()
    {
    }

    /**
     * Test case for getArchitectEmergencygroup
     *
     * Gets a emergency group by ID.
     *
     */
    public function testGetArchitectEmergencygroup()
    {
    }

    /**
     * Test case for getArchitectEmergencygroups
     *
     * Get a list of emergency groups..
     *
     */
    public function testGetArchitectEmergencygroups()
    {
    }

    /**
     * Test case for getArchitectIvr
     *
     * Get an IVR config..
     *
     */
    public function testGetArchitectIvr()
    {
    }

    /**
     * Test case for getArchitectIvrs
     *
     * Get IVR configs..
     *
     */
    public function testGetArchitectIvrs()
    {
    }

    /**
     * Test case for getArchitectPrompt
     *
     * Get specified user prompt.
     *
     */
    public function testGetArchitectPrompt()
    {
    }

    /**
     * Test case for getArchitectPromptHistoryHistoryId
     *
     * Get generated prompt history.
     *
     */
    public function testGetArchitectPromptHistoryHistoryId()
    {
    }

    /**
     * Test case for getArchitectPromptResource
     *
     * Get specified user prompt resource.
     *
     */
    public function testGetArchitectPromptResource()
    {
    }

    /**
     * Test case for getArchitectPromptResources
     *
     * Get a pageable list of user prompt resources.
     *
     */
    public function testGetArchitectPromptResources()
    {
    }

    /**
     * Test case for getArchitectPrompts
     *
     * Get a pageable list of user prompts.
     *
     */
    public function testGetArchitectPrompts()
    {
    }

    /**
     * Test case for getArchitectSchedule
     *
     * Get a schedule by ID.
     *
     */
    public function testGetArchitectSchedule()
    {
    }

    /**
     * Test case for getArchitectSchedulegroup
     *
     * Gets a schedule group by ID.
     *
     */
    public function testGetArchitectSchedulegroup()
    {
    }

    /**
     * Test case for getArchitectSchedulegroups
     *
     * Get a list of schedule groups..
     *
     */
    public function testGetArchitectSchedulegroups()
    {
    }

    /**
     * Test case for getArchitectSchedules
     *
     * Get a list of schedules..
     *
     */
    public function testGetArchitectSchedules()
    {
    }

    /**
     * Test case for getArchitectSystemprompt
     *
     * Get a system prompt.
     *
     */
    public function testGetArchitectSystemprompt()
    {
    }

    /**
     * Test case for getArchitectSystempromptHistoryHistoryId
     *
     * Get generated prompt history.
     *
     */
    public function testGetArchitectSystempromptHistoryHistoryId()
    {
    }

    /**
     * Test case for getArchitectSystempromptResource
     *
     * Get a system prompt resource..
     *
     */
    public function testGetArchitectSystempromptResource()
    {
    }

    /**
     * Test case for getArchitectSystempromptResources
     *
     * Get system prompt resources..
     *
     */
    public function testGetArchitectSystempromptResources()
    {
    }

    /**
     * Test case for getArchitectSystemprompts
     *
     * Get System Prompts.
     *
     */
    public function testGetArchitectSystemprompts()
    {
    }

    /**
     * Test case for getFlow
     *
     * Get flow.
     *
     */
    public function testGetFlow()
    {
    }

    /**
     * Test case for getFlowHistoryHistoryId
     *
     * Get generated flow history.
     *
     */
    public function testGetFlowHistoryHistoryId()
    {
    }

    /**
     * Test case for getFlowLatestconfiguration
     *
     * Get the latest configuration for flow.
     *
     */
    public function testGetFlowLatestconfiguration()
    {
    }

    /**
     * Test case for getFlowVersion
     *
     * Get flow version.
     *
     */
    public function testGetFlowVersion()
    {
    }

    /**
     * Test case for getFlowVersionConfiguration
     *
     * Create flow version configuration.
     *
     */
    public function testGetFlowVersionConfiguration()
    {
    }

    /**
     * Test case for getFlowVersions
     *
     * Get flow version list.
     *
     */
    public function testGetFlowVersions()
    {
    }

    /**
     * Test case for getFlows
     *
     * Get a pageable list of flows, filtered by query parameters.
     *
     */
    public function testGetFlows()
    {
    }

    /**
     * Test case for getFlowsDatatable
     *
     * Returns a specific datatable by id.
     *
     */
    public function testGetFlowsDatatable()
    {
    }

    /**
     * Test case for getFlowsDatatableRow
     *
     * Returns a specific row for the datatable.
     *
     */
    public function testGetFlowsDatatableRow()
    {
    }

    /**
     * Test case for getFlowsDatatableRows
     *
     * Returns the rows for the datatable with the given id.
     *
     */
    public function testGetFlowsDatatableRows()
    {
    }

    /**
     * Test case for getFlowsDatatables
     *
     * Retrieve a list of datatables for the org.
     *
     */
    public function testGetFlowsDatatables()
    {
    }

    /**
     * Test case for getFlowsDivisionviews
     *
     * Get a pageable list of basic flow information objects filterable by query parameters..
     *
     */
    public function testGetFlowsDivisionviews()
    {
    }

    /**
     * Test case for getFlowsOutcome
     *
     * Get a flow outcome.
     *
     */
    public function testGetFlowsOutcome()
    {
    }

    /**
     * Test case for getFlowsOutcomes
     *
     * Get a pageable list of flow outcomes, filtered by query parameters.
     *
     */
    public function testGetFlowsOutcomes()
    {
    }

    /**
     * Test case for postArchitectDependencytrackingBuild
     *
     * Rebuild Dependency Tracking data for an organization.
     *
     */
    public function testPostArchitectDependencytrackingBuild()
    {
    }

    /**
     * Test case for postArchitectEmergencygroups
     *
     * Creates a new emergency group.
     *
     */
    public function testPostArchitectEmergencygroups()
    {
    }

    /**
     * Test case for postArchitectIvrs
     *
     * Create IVR config..
     *
     */
    public function testPostArchitectIvrs()
    {
    }

    /**
     * Test case for postArchitectPromptHistory
     *
     * Generate prompt history.
     *
     */
    public function testPostArchitectPromptHistory()
    {
    }

    /**
     * Test case for postArchitectPromptResources
     *
     * Create a new user prompt resource.
     *
     */
    public function testPostArchitectPromptResources()
    {
    }

    /**
     * Test case for postArchitectPrompts
     *
     * Create a new user prompt.
     *
     */
    public function testPostArchitectPrompts()
    {
    }

    /**
     * Test case for postArchitectSchedulegroups
     *
     * Creates a new schedule group.
     *
     */
    public function testPostArchitectSchedulegroups()
    {
    }

    /**
     * Test case for postArchitectSchedules
     *
     * Create a new schedule..
     *
     */
    public function testPostArchitectSchedules()
    {
    }

    /**
     * Test case for postArchitectSystempromptHistory
     *
     * Generate system prompt history.
     *
     */
    public function testPostArchitectSystempromptHistory()
    {
    }

    /**
     * Test case for postArchitectSystempromptResources
     *
     * Create system prompt resource override..
     *
     */
    public function testPostArchitectSystempromptResources()
    {
    }

    /**
     * Test case for postFlowVersions
     *
     * Create flow version.
     *
     */
    public function testPostFlowVersions()
    {
    }

    /**
     * Test case for postFlows
     *
     * Create flow.
     *
     */
    public function testPostFlows()
    {
    }

    /**
     * Test case for postFlowsActionsCheckin
     *
     * Check-in flow.
     *
     */
    public function testPostFlowsActionsCheckin()
    {
    }

    /**
     * Test case for postFlowsActionsCheckout
     *
     * Check-out flow.
     *
     */
    public function testPostFlowsActionsCheckout()
    {
    }

    /**
     * Test case for postFlowsActionsDeactivate
     *
     * Deactivate flow.
     *
     */
    public function testPostFlowsActionsDeactivate()
    {
    }

    /**
     * Test case for postFlowsActionsPublish
     *
     * Publish flow.
     *
     */
    public function testPostFlowsActionsPublish()
    {
    }

    /**
     * Test case for postFlowsActionsRevert
     *
     * Revert flow.
     *
     */
    public function testPostFlowsActionsRevert()
    {
    }

    /**
     * Test case for postFlowsActionsUnlock
     *
     * Unlock flow.
     *
     */
    public function testPostFlowsActionsUnlock()
    {
    }

    /**
     * Test case for postFlowsDatatableRows
     *
     * Create a new row entry for the datatable..
     *
     */
    public function testPostFlowsDatatableRows()
    {
    }

    /**
     * Test case for postFlowsDatatables
     *
     * Create a new datatable with the specified json-schema definition.
     *
     */
    public function testPostFlowsDatatables()
    {
    }

    /**
     * Test case for postFlowsOutcomes
     *
     * Create a flow outcome.
     *
     */
    public function testPostFlowsOutcomes()
    {
    }

    /**
     * Test case for putArchitectEmergencygroup
     *
     * Updates a emergency group by ID.
     *
     */
    public function testPutArchitectEmergencygroup()
    {
    }

    /**
     * Test case for putArchitectIvr
     *
     * Update an IVR Config..
     *
     */
    public function testPutArchitectIvr()
    {
    }

    /**
     * Test case for putArchitectPrompt
     *
     * Update specified user prompt.
     *
     */
    public function testPutArchitectPrompt()
    {
    }

    /**
     * Test case for putArchitectPromptResource
     *
     * Update specified user prompt resource.
     *
     */
    public function testPutArchitectPromptResource()
    {
    }

    /**
     * Test case for putArchitectSchedule
     *
     * Update schedule by ID.
     *
     */
    public function testPutArchitectSchedule()
    {
    }

    /**
     * Test case for putArchitectSchedulegroup
     *
     * Updates a schedule group by ID.
     *
     */
    public function testPutArchitectSchedulegroup()
    {
    }

    /**
     * Test case for putArchitectSystempromptResource
     *
     * Updates a system prompt resource override..
     *
     */
    public function testPutArchitectSystempromptResource()
    {
    }

    /**
     * Test case for putFlow
     *
     * Update flow.
     *
     */
    public function testPutFlow()
    {
    }

    /**
     * Test case for putFlowsDatatable
     *
     * Updates a specific datatable by id.
     *
     */
    public function testPutFlowsDatatable()
    {
    }

    /**
     * Test case for putFlowsDatatableRow
     *
     * Update a row entry.
     *
     */
    public function testPutFlowsDatatableRow()
    {
    }

    /**
     * Test case for putFlowsOutcome
     *
     * Updates a flow outcome.
     *
     */
    public function testPutFlowsOutcome()
    {
    }
}
