<?php
/**
 * UsersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace PureCloudPlatform\Client\V2;

use \PureCloudPlatform\Client\V2\Configuration;
use \PureCloudPlatform\Client\V2\ApiException;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * UsersApiTest Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UsersApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteAuthorizationSubjectDivisionRole
     *
     * Delete a grant of a role in a division.
     *
     */
    public function testDeleteAuthorizationSubjectDivisionRole()
    {
    }

    /**
     * Test case for deleteUser
     *
     * Delete user.
     *
     */
    public function testDeleteUser()
    {
    }

    /**
     * Test case for deleteUserRoles
     *
     * Removes all the roles from the user..
     *
     */
    public function testDeleteUserRoles()
    {
    }

    /**
     * Test case for deleteUserRoutinglanguage
     *
     * Remove routing language from user.
     *
     */
    public function testDeleteUserRoutinglanguage()
    {
    }

    /**
     * Test case for deleteUserRoutingskill
     *
     * Remove routing skill from user.
     *
     */
    public function testDeleteUserRoutingskill()
    {
    }

    /**
     * Test case for deleteUserStationAssociatedstation
     *
     * Clear associated station.
     *
     */
    public function testDeleteUserStationAssociatedstation()
    {
    }

    /**
     * Test case for deleteUserStationDefaultstation
     *
     * Clear default station.
     *
     */
    public function testDeleteUserStationDefaultstation()
    {
    }

    /**
     * Test case for getAuthorizationDivisionspermittedMe
     *
     * Returns whether or not current user can perform the specified action(s)..
     *
     */
    public function testGetAuthorizationDivisionspermittedMe()
    {
    }

    /**
     * Test case for getAuthorizationDivisionspermittedSubjectId
     *
     * Returns whether or not specified user can perform the specified action(s)..
     *
     */
    public function testGetAuthorizationDivisionspermittedSubjectId()
    {
    }

    /**
     * Test case for getAuthorizationSubject
     *
     * Returns a listing of roles and permissions for a user..
     *
     */
    public function testGetAuthorizationSubject()
    {
    }

    /**
     * Test case for getAuthorizationSubjectsMe
     *
     * Returns a listing of roles and permissions for the currently authenticated user..
     *
     */
    public function testGetAuthorizationSubjectsMe()
    {
    }

    /**
     * Test case for getFieldconfig
     *
     * Fetch field config for an entity type.
     *
     */
    public function testGetFieldconfig()
    {
    }

    /**
     * Test case for getProfilesUsers
     *
     * Get a user profile listing.
     *
     */
    public function testGetProfilesUsers()
    {
    }

    /**
     * Test case for getUser
     *
     * Get user..
     *
     */
    public function testGetUser()
    {
    }

    /**
     * Test case for getUserAdjacents
     *
     * Get adjacents.
     *
     */
    public function testGetUserAdjacents()
    {
    }

    /**
     * Test case for getUserCallforwarding
     *
     * Get a user's CallForwarding.
     *
     */
    public function testGetUserCallforwarding()
    {
    }

    /**
     * Test case for getUserDirectreports
     *
     * Get direct reports.
     *
     */
    public function testGetUserDirectreports()
    {
    }

    /**
     * Test case for getUserFavorites
     *
     * Get favorites.
     *
     */
    public function testGetUserFavorites()
    {
    }

    /**
     * Test case for getUserGeolocation
     *
     * Get a user's Geolocation.
     *
     */
    public function testGetUserGeolocation()
    {
    }

    /**
     * Test case for getUserOutofoffice
     *
     * Get a OutOfOffice.
     *
     */
    public function testGetUserOutofoffice()
    {
    }

    /**
     * Test case for getUserProfile
     *
     * Get user profile.
     *
     */
    public function testGetUserProfile()
    {
    }

    /**
     * Test case for getUserProfileskills
     *
     * List profile skills for a user.
     *
     */
    public function testGetUserProfileskills()
    {
    }

    /**
     * Test case for getUserQueues
     *
     * Get queues for user.
     *
     */
    public function testGetUserQueues()
    {
    }

    /**
     * Test case for getUserRoles
     *
     * Returns a listing of roles and permissions for a user..
     *
     */
    public function testGetUserRoles()
    {
    }

    /**
     * Test case for getUserRoutinglanguages
     *
     * List routing language for user.
     *
     */
    public function testGetUserRoutinglanguages()
    {
    }

    /**
     * Test case for getUserRoutingskills
     *
     * List routing skills for user.
     *
     */
    public function testGetUserRoutingskills()
    {
    }

    /**
     * Test case for getUserRoutingstatus
     *
     * Fetch the routing status of a user.
     *
     */
    public function testGetUserRoutingstatus()
    {
    }

    /**
     * Test case for getUserStation
     *
     * Get station information for user.
     *
     */
    public function testGetUserStation()
    {
    }

    /**
     * Test case for getUserSuperiors
     *
     * Get superiors.
     *
     */
    public function testGetUserSuperiors()
    {
    }

    /**
     * Test case for getUserTrustors
     *
     * List the organizations that have authorized/trusted the user..
     *
     */
    public function testGetUserTrustors()
    {
    }

    /**
     * Test case for getUsers
     *
     * Get the list of available users..
     *
     */
    public function testGetUsers()
    {
    }

    /**
     * Test case for getUsersMe
     *
     * Get current user details..
     *
     */
    public function testGetUsersMe()
    {
    }

    /**
     * Test case for getUsersSearch
     *
     * Search users using the q64 value returned from a previous search.
     *
     */
    public function testGetUsersSearch()
    {
    }

    /**
     * Test case for patchUser
     *
     * Update user.
     *
     */
    public function testPatchUser()
    {
    }

    /**
     * Test case for patchUserCallforwarding
     *
     * Patch a user's CallForwarding.
     *
     */
    public function testPatchUserCallforwarding()
    {
    }

    /**
     * Test case for patchUserGeolocation
     *
     * Patch a user's Geolocation.
     *
     */
    public function testPatchUserGeolocation()
    {
    }

    /**
     * Test case for patchUserQueue
     *
     * Join or unjoin a queue for a user.
     *
     */
    public function testPatchUserQueue()
    {
    }

    /**
     * Test case for patchUserQueues
     *
     * Join or unjoin a set of queues for a user.
     *
     */
    public function testPatchUserQueues()
    {
    }

    /**
     * Test case for patchUserRoutinglanguage
     *
     * Update routing language proficiency or state..
     *
     */
    public function testPatchUserRoutinglanguage()
    {
    }

    /**
     * Test case for patchUserRoutinglanguagesBulk
     *
     * Add bulk routing language to user. Max limit 50 languages.
     *
     */
    public function testPatchUserRoutinglanguagesBulk()
    {
    }

    /**
     * Test case for patchUserRoutingskillsBulk
     *
     * Bulk add routing skills to user.
     *
     */
    public function testPatchUserRoutingskillsBulk()
    {
    }

    /**
     * Test case for patchUsersBulk
     *
     * Update bulk acd autoanswer on users.
     *
     */
    public function testPatchUsersBulk()
    {
    }

    /**
     * Test case for postAnalyticsUsersAggregatesQuery
     *
     * Query for user aggregates.
     *
     */
    public function testPostAnalyticsUsersAggregatesQuery()
    {
    }

    /**
     * Test case for postAnalyticsUsersDetailsQuery
     *
     * Query for user details.
     *
     */
    public function testPostAnalyticsUsersDetailsQuery()
    {
    }

    /**
     * Test case for postAnalyticsUsersObservationsQuery
     *
     * Query for user observations.
     *
     */
    public function testPostAnalyticsUsersObservationsQuery()
    {
    }

    /**
     * Test case for postAuthorizationSubjectBulkadd
     *
     * Bulk-grant roles and divisions to a subject..
     *
     */
    public function testPostAuthorizationSubjectBulkadd()
    {
    }

    /**
     * Test case for postAuthorizationSubjectBulkremove
     *
     * Bulk-remove grants from a subject..
     *
     */
    public function testPostAuthorizationSubjectBulkremove()
    {
    }

    /**
     * Test case for postAuthorizationSubjectDivisionRole
     *
     * Make a grant of a role in a division.
     *
     */
    public function testPostAuthorizationSubjectDivisionRole()
    {
    }

    /**
     * Test case for postUserInvite
     *
     * Send an activation email to the user.
     *
     */
    public function testPostUserInvite()
    {
    }

    /**
     * Test case for postUserPassword
     *
     * Change a users password.
     *
     */
    public function testPostUserPassword()
    {
    }

    /**
     * Test case for postUserRoutinglanguages
     *
     * Add routing language to user.
     *
     */
    public function testPostUserRoutinglanguages()
    {
    }

    /**
     * Test case for postUserRoutingskills
     *
     * Add routing skill to user.
     *
     */
    public function testPostUserRoutingskills()
    {
    }

    /**
     * Test case for postUsers
     *
     * Create user.
     *
     */
    public function testPostUsers()
    {
    }

    /**
     * Test case for postUsersMePassword
     *
     * Change your password.
     *
     */
    public function testPostUsersMePassword()
    {
    }

    /**
     * Test case for postUsersSearch
     *
     * Search users.
     *
     */
    public function testPostUsersSearch()
    {
    }

    /**
     * Test case for putUserCallforwarding
     *
     * Update a user's CallForwarding.
     *
     */
    public function testPutUserCallforwarding()
    {
    }

    /**
     * Test case for putUserOutofoffice
     *
     * Update an OutOfOffice.
     *
     */
    public function testPutUserOutofoffice()
    {
    }

    /**
     * Test case for putUserProfileskills
     *
     * Update profile skills for a user.
     *
     */
    public function testPutUserProfileskills()
    {
    }

    /**
     * Test case for putUserRoles
     *
     * Sets the user's roles.
     *
     */
    public function testPutUserRoles()
    {
    }

    /**
     * Test case for putUserRoutingskill
     *
     * Update routing skill proficiency or state..
     *
     */
    public function testPutUserRoutingskill()
    {
    }

    /**
     * Test case for putUserRoutingskillsBulk
     *
     * Replace all routing skills assigned to a user.
     *
     */
    public function testPutUserRoutingskillsBulk()
    {
    }

    /**
     * Test case for putUserRoutingstatus
     *
     * Update the routing status of a user.
     *
     */
    public function testPutUserRoutingstatus()
    {
    }

    /**
     * Test case for putUserStationAssociatedstationStationId
     *
     * Set associated station.
     *
     */
    public function testPutUserStationAssociatedstationStationId()
    {
    }

    /**
     * Test case for putUserStationDefaultstationStationId
     *
     * Set default station.
     *
     */
    public function testPutUserStationDefaultstationStationId()
    {
    }
}
