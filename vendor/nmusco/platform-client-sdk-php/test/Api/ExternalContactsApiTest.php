<?php
/**
 * ExternalContactsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace PureCloudPlatform\Client\V2;

use \PureCloudPlatform\Client\V2\Configuration;
use \PureCloudPlatform\Client\V2\ApiException;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * ExternalContactsApiTest Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ExternalContactsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteExternalcontactsContact
     *
     * Delete an external contact.
     *
     */
    public function testDeleteExternalcontactsContact()
    {
    }

    /**
     * Test case for deleteExternalcontactsContactNote
     *
     * Delete a note for an external contact.
     *
     */
    public function testDeleteExternalcontactsContactNote()
    {
    }

    /**
     * Test case for deleteExternalcontactsOrganization
     *
     * Delete an external organization.
     *
     */
    public function testDeleteExternalcontactsOrganization()
    {
    }

    /**
     * Test case for deleteExternalcontactsOrganizationNote
     *
     * Delete a note for an external organization.
     *
     */
    public function testDeleteExternalcontactsOrganizationNote()
    {
    }

    /**
     * Test case for deleteExternalcontactsOrganizationTrustor
     *
     * Unlink the Trustor for this External Organization.
     *
     */
    public function testDeleteExternalcontactsOrganizationTrustor()
    {
    }

    /**
     * Test case for deleteExternalcontactsRelationship
     *
     * Delete a relationship.
     *
     */
    public function testDeleteExternalcontactsRelationship()
    {
    }

    /**
     * Test case for getExternalcontactsContact
     *
     * Fetch an external contact.
     *
     */
    public function testGetExternalcontactsContact()
    {
    }

    /**
     * Test case for getExternalcontactsContactNote
     *
     * Fetch a note for an external contact.
     *
     */
    public function testGetExternalcontactsContactNote()
    {
    }

    /**
     * Test case for getExternalcontactsContactNotes
     *
     * List notes for an external contact.
     *
     */
    public function testGetExternalcontactsContactNotes()
    {
    }

    /**
     * Test case for getExternalcontactsContacts
     *
     * Search for external contacts.
     *
     */
    public function testGetExternalcontactsContacts()
    {
    }

    /**
     * Test case for getExternalcontactsOrganization
     *
     * Fetch an external organization.
     *
     */
    public function testGetExternalcontactsOrganization()
    {
    }

    /**
     * Test case for getExternalcontactsOrganizationContacts
     *
     * Search for external contacts in an external organization.
     *
     */
    public function testGetExternalcontactsOrganizationContacts()
    {
    }

    /**
     * Test case for getExternalcontactsOrganizationNote
     *
     * Fetch a note for an external organization.
     *
     */
    public function testGetExternalcontactsOrganizationNote()
    {
    }

    /**
     * Test case for getExternalcontactsOrganizationNotes
     *
     * List notes for an external organization.
     *
     */
    public function testGetExternalcontactsOrganizationNotes()
    {
    }

    /**
     * Test case for getExternalcontactsOrganizationRelationships
     *
     * Fetch a relationship for an external organization.
     *
     */
    public function testGetExternalcontactsOrganizationRelationships()
    {
    }

    /**
     * Test case for getExternalcontactsOrganizations
     *
     * Search for external organizations.
     *
     */
    public function testGetExternalcontactsOrganizations()
    {
    }

    /**
     * Test case for getExternalcontactsRelationship
     *
     * Fetch a relationship.
     *
     */
    public function testGetExternalcontactsRelationship()
    {
    }

    /**
     * Test case for getExternalcontactsReversewhitepageslookup
     *
     * Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned..
     *
     */
    public function testGetExternalcontactsReversewhitepageslookup()
    {
    }

    /**
     * Test case for postExternalcontactsContactNotes
     *
     * Create a note for an external contact.
     *
     */
    public function testPostExternalcontactsContactNotes()
    {
    }

    /**
     * Test case for postExternalcontactsContacts
     *
     * Create an external contact.
     *
     */
    public function testPostExternalcontactsContacts()
    {
    }

    /**
     * Test case for postExternalcontactsOrganizationNotes
     *
     * Create a note for an external organization.
     *
     */
    public function testPostExternalcontactsOrganizationNotes()
    {
    }

    /**
     * Test case for postExternalcontactsOrganizations
     *
     * Create an external organization.
     *
     */
    public function testPostExternalcontactsOrganizations()
    {
    }

    /**
     * Test case for postExternalcontactsRelationships
     *
     * Create a relationship.
     *
     */
    public function testPostExternalcontactsRelationships()
    {
    }

    /**
     * Test case for putExternalcontactsContact
     *
     * Update an external contact.
     *
     */
    public function testPutExternalcontactsContact()
    {
    }

    /**
     * Test case for putExternalcontactsContactNote
     *
     * Update a note for an external contact.
     *
     */
    public function testPutExternalcontactsContactNote()
    {
    }

    /**
     * Test case for putExternalcontactsConversation
     *
     * Associate an external contact with a conversation.
     *
     */
    public function testPutExternalcontactsConversation()
    {
    }

    /**
     * Test case for putExternalcontactsOrganization
     *
     * Update an external organization.
     *
     */
    public function testPutExternalcontactsOrganization()
    {
    }

    /**
     * Test case for putExternalcontactsOrganizationNote
     *
     * Update a note for an external organization.
     *
     */
    public function testPutExternalcontactsOrganizationNote()
    {
    }

    /**
     * Test case for putExternalcontactsOrganizationTrustorTrustorId
     *
     * Links a Trustor with an External Organization.
     *
     */
    public function testPutExternalcontactsOrganizationTrustorTrustorId()
    {
    }

    /**
     * Test case for putExternalcontactsRelationship
     *
     * Update a relationship.
     *
     */
    public function testPutExternalcontactsRelationship()
    {
    }
}
