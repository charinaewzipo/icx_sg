<?php
/**
 * VoicemailMessage
 *
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PureCloudPlatform\Client\V2\Model;

use \ArrayAccess;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * VoicemailMessage Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VoicemailMessage implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'VoicemailMessage';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'conversation' => '\PureCloudPlatform\Client\V2\Model\Conversation',
        'read' => 'bool',
        'audioRecordingDurationSeconds' => 'int',
        'audioRecordingSizeBytes' => 'int',
        'createdDate' => '\DateTime',
        'modifiedDate' => '\DateTime',
        'deletedDate' => '\DateTime',
        'callerAddress' => 'string',
        'callerName' => 'string',
        'callerUser' => '\PureCloudPlatform\Client\V2\Model\User',
        'deleted' => 'bool',
        'note' => 'string',
        'user' => '\PureCloudPlatform\Client\V2\Model\User',
        'group' => '\PureCloudPlatform\Client\V2\Model\Group',
        'queue' => '\PureCloudPlatform\Client\V2\Model\Queue',
        'copiedFrom' => '\PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord',
        'copiedTo' => '\PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord[]',
        'deleteRetentionPolicy' => '\PureCloudPlatform\Client\V2\Model\VoicemailRetentionPolicy',
        'selfUri' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'conversation' => null,
        'read' => null,
        'audioRecordingDurationSeconds' => 'int32',
        'audioRecordingSizeBytes' => 'int64',
        'createdDate' => 'date-time',
        'modifiedDate' => 'date-time',
        'deletedDate' => 'date-time',
        'callerAddress' => null,
        'callerName' => null,
        'callerUser' => null,
        'deleted' => null,
        'note' => null,
        'user' => null,
        'group' => null,
        'queue' => null,
        'copiedFrom' => null,
        'copiedTo' => null,
        'deleteRetentionPolicy' => null,
        'selfUri' => 'uri'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'conversation' => 'conversation',
        'read' => 'read',
        'audioRecordingDurationSeconds' => 'audioRecordingDurationSeconds',
        'audioRecordingSizeBytes' => 'audioRecordingSizeBytes',
        'createdDate' => 'createdDate',
        'modifiedDate' => 'modifiedDate',
        'deletedDate' => 'deletedDate',
        'callerAddress' => 'callerAddress',
        'callerName' => 'callerName',
        'callerUser' => 'callerUser',
        'deleted' => 'deleted',
        'note' => 'note',
        'user' => 'user',
        'group' => 'group',
        'queue' => 'queue',
        'copiedFrom' => 'copiedFrom',
        'copiedTo' => 'copiedTo',
        'deleteRetentionPolicy' => 'deleteRetentionPolicy',
        'selfUri' => 'selfUri'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'conversation' => 'setConversation',
        'read' => 'setRead',
        'audioRecordingDurationSeconds' => 'setAudioRecordingDurationSeconds',
        'audioRecordingSizeBytes' => 'setAudioRecordingSizeBytes',
        'createdDate' => 'setCreatedDate',
        'modifiedDate' => 'setModifiedDate',
        'deletedDate' => 'setDeletedDate',
        'callerAddress' => 'setCallerAddress',
        'callerName' => 'setCallerName',
        'callerUser' => 'setCallerUser',
        'deleted' => 'setDeleted',
        'note' => 'setNote',
        'user' => 'setUser',
        'group' => 'setGroup',
        'queue' => 'setQueue',
        'copiedFrom' => 'setCopiedFrom',
        'copiedTo' => 'setCopiedTo',
        'deleteRetentionPolicy' => 'setDeleteRetentionPolicy',
        'selfUri' => 'setSelfUri'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'conversation' => 'getConversation',
        'read' => 'getRead',
        'audioRecordingDurationSeconds' => 'getAudioRecordingDurationSeconds',
        'audioRecordingSizeBytes' => 'getAudioRecordingSizeBytes',
        'createdDate' => 'getCreatedDate',
        'modifiedDate' => 'getModifiedDate',
        'deletedDate' => 'getDeletedDate',
        'callerAddress' => 'getCallerAddress',
        'callerName' => 'getCallerName',
        'callerUser' => 'getCallerUser',
        'deleted' => 'getDeleted',
        'note' => 'getNote',
        'user' => 'getUser',
        'group' => 'getGroup',
        'queue' => 'getQueue',
        'copiedFrom' => 'getCopiedFrom',
        'copiedTo' => 'getCopiedTo',
        'deleteRetentionPolicy' => 'getDeleteRetentionPolicy',
        'selfUri' => 'getSelfUri'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['conversation'] = isset($data['conversation']) ? $data['conversation'] : null;
        $this->container['read'] = isset($data['read']) ? $data['read'] : null;
        $this->container['audioRecordingDurationSeconds'] = isset($data['audioRecordingDurationSeconds']) ? $data['audioRecordingDurationSeconds'] : null;
        $this->container['audioRecordingSizeBytes'] = isset($data['audioRecordingSizeBytes']) ? $data['audioRecordingSizeBytes'] : null;
        $this->container['createdDate'] = isset($data['createdDate']) ? $data['createdDate'] : null;
        $this->container['modifiedDate'] = isset($data['modifiedDate']) ? $data['modifiedDate'] : null;
        $this->container['deletedDate'] = isset($data['deletedDate']) ? $data['deletedDate'] : null;
        $this->container['callerAddress'] = isset($data['callerAddress']) ? $data['callerAddress'] : null;
        $this->container['callerName'] = isset($data['callerName']) ? $data['callerName'] : null;
        $this->container['callerUser'] = isset($data['callerUser']) ? $data['callerUser'] : null;
        $this->container['deleted'] = isset($data['deleted']) ? $data['deleted'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['user'] = isset($data['user']) ? $data['user'] : null;
        $this->container['group'] = isset($data['group']) ? $data['group'] : null;
        $this->container['queue'] = isset($data['queue']) ? $data['queue'] : null;
        $this->container['copiedFrom'] = isset($data['copiedFrom']) ? $data['copiedFrom'] : null;
        $this->container['copiedTo'] = isset($data['copiedTo']) ? $data['copiedTo'] : null;
        $this->container['deleteRetentionPolicy'] = isset($data['deleteRetentionPolicy']) ? $data['deleteRetentionPolicy'] : null;
        $this->container['selfUri'] = isset($data['selfUri']) ? $data['selfUri'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id The globally unique identifier for the object.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets conversation
     *
     * @return \PureCloudPlatform\Client\V2\Model\Conversation
     */
    public function getConversation()
    {
        return $this->container['conversation'];
    }

    /**
     * Sets conversation
     *
     * @param \PureCloudPlatform\Client\V2\Model\Conversation $conversation The conversation that the voicemail message is associated with
     *
     * @return $this
     */
    public function setConversation($conversation)
    {
        $this->container['conversation'] = $conversation;

        return $this;
    }

    /**
     * Gets read
     *
     * @return bool
     */
    public function getRead()
    {
        return $this->container['read'];
    }

    /**
     * Sets read
     *
     * @param bool $read Whether the voicemail message is marked as read
     *
     * @return $this
     */
    public function setRead($read)
    {
        $this->container['read'] = $read;

        return $this;
    }

    /**
     * Gets audioRecordingDurationSeconds
     *
     * @return int
     */
    public function getAudioRecordingDurationSeconds()
    {
        return $this->container['audioRecordingDurationSeconds'];
    }

    /**
     * Sets audioRecordingDurationSeconds
     *
     * @param int $audioRecordingDurationSeconds The voicemail message's audio recording duration in seconds
     *
     * @return $this
     */
    public function setAudioRecordingDurationSeconds($audioRecordingDurationSeconds)
    {
        $this->container['audioRecordingDurationSeconds'] = $audioRecordingDurationSeconds;

        return $this;
    }

    /**
     * Gets audioRecordingSizeBytes
     *
     * @return int
     */
    public function getAudioRecordingSizeBytes()
    {
        return $this->container['audioRecordingSizeBytes'];
    }

    /**
     * Sets audioRecordingSizeBytes
     *
     * @param int $audioRecordingSizeBytes The voicemail message's audio recording size in bytes
     *
     * @return $this
     */
    public function setAudioRecordingSizeBytes($audioRecordingSizeBytes)
    {
        $this->container['audioRecordingSizeBytes'] = $audioRecordingSizeBytes;

        return $this;
    }

    /**
     * Gets createdDate
     *
     * @return \DateTime
     */
    public function getCreatedDate()
    {
        return $this->container['createdDate'];
    }

    /**
     * Sets createdDate
     *
     * @param \DateTime $createdDate The date the voicemail message was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setCreatedDate($createdDate)
    {
        $this->container['createdDate'] = $createdDate;

        return $this;
    }

    /**
     * Gets modifiedDate
     *
     * @return \DateTime
     */
    public function getModifiedDate()
    {
        return $this->container['modifiedDate'];
    }

    /**
     * Sets modifiedDate
     *
     * @param \DateTime $modifiedDate The date the voicemail message was last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setModifiedDate($modifiedDate)
    {
        $this->container['modifiedDate'] = $modifiedDate;

        return $this;
    }

    /**
     * Gets deletedDate
     *
     * @return \DateTime
     */
    public function getDeletedDate()
    {
        return $this->container['deletedDate'];
    }

    /**
     * Sets deletedDate
     *
     * @param \DateTime $deletedDate The date the voicemail message deleted property was set to true. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setDeletedDate($deletedDate)
    {
        $this->container['deletedDate'] = $deletedDate;

        return $this;
    }

    /**
     * Gets callerAddress
     *
     * @return string
     */
    public function getCallerAddress()
    {
        return $this->container['callerAddress'];
    }

    /**
     * Sets callerAddress
     *
     * @param string $callerAddress The caller address
     *
     * @return $this
     */
    public function setCallerAddress($callerAddress)
    {
        $this->container['callerAddress'] = $callerAddress;

        return $this;
    }

    /**
     * Gets callerName
     *
     * @return string
     */
    public function getCallerName()
    {
        return $this->container['callerName'];
    }

    /**
     * Sets callerName
     *
     * @param string $callerName Optionally the name of the caller that left the voicemail message if the caller was a known user
     *
     * @return $this
     */
    public function setCallerName($callerName)
    {
        $this->container['callerName'] = $callerName;

        return $this;
    }

    /**
     * Gets callerUser
     *
     * @return \PureCloudPlatform\Client\V2\Model\User
     */
    public function getCallerUser()
    {
        return $this->container['callerUser'];
    }

    /**
     * Sets callerUser
     *
     * @param \PureCloudPlatform\Client\V2\Model\User $callerUser Optionally the user that left the voicemail message if the caller was a known user
     *
     * @return $this
     */
    public function setCallerUser($callerUser)
    {
        $this->container['callerUser'] = $callerUser;

        return $this;
    }

    /**
     * Gets deleted
     *
     * @return bool
     */
    public function getDeleted()
    {
        return $this->container['deleted'];
    }

    /**
     * Sets deleted
     *
     * @param bool $deleted Whether the voicemail message has been marked as deleted
     *
     * @return $this
     */
    public function setDeleted($deleted)
    {
        $this->container['deleted'] = $deleted;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note An optional note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets user
     *
     * @return \PureCloudPlatform\Client\V2\Model\User
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param \PureCloudPlatform\Client\V2\Model\User $user The user that the voicemail message belongs to or null which means the voicemail message belongs to a group or queue
     *
     * @return $this
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets group
     *
     * @return \PureCloudPlatform\Client\V2\Model\Group
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param \PureCloudPlatform\Client\V2\Model\Group $group The group that the voicemail message belongs to or null which means the voicemail message belongs to a user or queue
     *
     * @return $this
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets queue
     *
     * @return \PureCloudPlatform\Client\V2\Model\Queue
     */
    public function getQueue()
    {
        return $this->container['queue'];
    }

    /**
     * Sets queue
     *
     * @param \PureCloudPlatform\Client\V2\Model\Queue $queue The queue that the voicemail message belongs to or null which means the voicemail message belongs to a user or group
     *
     * @return $this
     */
    public function setQueue($queue)
    {
        $this->container['queue'] = $queue;

        return $this;
    }

    /**
     * Gets copiedFrom
     *
     * @return \PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord
     */
    public function getCopiedFrom()
    {
        return $this->container['copiedFrom'];
    }

    /**
     * Sets copiedFrom
     *
     * @param \PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord $copiedFrom Represents where this voicemail message was copied from
     *
     * @return $this
     */
    public function setCopiedFrom($copiedFrom)
    {
        $this->container['copiedFrom'] = $copiedFrom;

        return $this;
    }

    /**
     * Gets copiedTo
     *
     * @return \PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord[]
     */
    public function getCopiedTo()
    {
        return $this->container['copiedTo'];
    }

    /**
     * Sets copiedTo
     *
     * @param \PureCloudPlatform\Client\V2\Model\VoicemailCopyRecord[] $copiedTo Represents where this voicemail has been copied to
     *
     * @return $this
     */
    public function setCopiedTo($copiedTo)
    {
        $this->container['copiedTo'] = $copiedTo;

        return $this;
    }

    /**
     * Gets deleteRetentionPolicy
     *
     * @return \PureCloudPlatform\Client\V2\Model\VoicemailRetentionPolicy
     */
    public function getDeleteRetentionPolicy()
    {
        return $this->container['deleteRetentionPolicy'];
    }

    /**
     * Sets deleteRetentionPolicy
     *
     * @param \PureCloudPlatform\Client\V2\Model\VoicemailRetentionPolicy $deleteRetentionPolicy The retention policy for this voicemail when deleted is set to true
     *
     * @return $this
     */
    public function setDeleteRetentionPolicy($deleteRetentionPolicy)
    {
        $this->container['deleteRetentionPolicy'] = $deleteRetentionPolicy;

        return $this;
    }

    /**
     * Gets selfUri
     *
     * @return string
     */
    public function getSelfUri()
    {
        return $this->container['selfUri'];
    }

    /**
     * Sets selfUri
     *
     * @param string $selfUri The URI for this object
     *
     * @return $this
     */
    public function setSelfUri($selfUri)
    {
        $this->container['selfUri'] = $selfUri;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


