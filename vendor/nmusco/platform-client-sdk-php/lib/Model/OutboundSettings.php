<?php
/**
 * OutboundSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PureCloudPlatform\Client\V2\Model;

use \ArrayAccess;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * OutboundSettings Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OutboundSettings implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OutboundSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'name' => 'string',
        'dateCreated' => '\DateTime',
        'dateModified' => '\DateTime',
        'version' => 'int',
        'maxCallsPerAgent' => 'int',
        'maxConfigurableCallsPerAgent' => 'int',
        'maxLineUtilization' => 'double',
        'abandonSeconds' => 'double',
        'complianceAbandonRateDenominator' => 'string',
        'selfUri' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'name' => null,
        'dateCreated' => 'date-time',
        'dateModified' => 'date-time',
        'version' => 'int32',
        'maxCallsPerAgent' => 'int32',
        'maxConfigurableCallsPerAgent' => 'int32',
        'maxLineUtilization' => 'double',
        'abandonSeconds' => 'double',
        'complianceAbandonRateDenominator' => null,
        'selfUri' => 'uri'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'dateCreated' => 'dateCreated',
        'dateModified' => 'dateModified',
        'version' => 'version',
        'maxCallsPerAgent' => 'maxCallsPerAgent',
        'maxConfigurableCallsPerAgent' => 'maxConfigurableCallsPerAgent',
        'maxLineUtilization' => 'maxLineUtilization',
        'abandonSeconds' => 'abandonSeconds',
        'complianceAbandonRateDenominator' => 'complianceAbandonRateDenominator',
        'selfUri' => 'selfUri'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'dateCreated' => 'setDateCreated',
        'dateModified' => 'setDateModified',
        'version' => 'setVersion',
        'maxCallsPerAgent' => 'setMaxCallsPerAgent',
        'maxConfigurableCallsPerAgent' => 'setMaxConfigurableCallsPerAgent',
        'maxLineUtilization' => 'setMaxLineUtilization',
        'abandonSeconds' => 'setAbandonSeconds',
        'complianceAbandonRateDenominator' => 'setComplianceAbandonRateDenominator',
        'selfUri' => 'setSelfUri'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'dateCreated' => 'getDateCreated',
        'dateModified' => 'getDateModified',
        'version' => 'getVersion',
        'maxCallsPerAgent' => 'getMaxCallsPerAgent',
        'maxConfigurableCallsPerAgent' => 'getMaxConfigurableCallsPerAgent',
        'maxLineUtilization' => 'getMaxLineUtilization',
        'abandonSeconds' => 'getAbandonSeconds',
        'complianceAbandonRateDenominator' => 'getComplianceAbandonRateDenominator',
        'selfUri' => 'getSelfUri'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const COMPLIANCE_ABANDON_RATE_DENOMINATOR_ALL_CALLS = 'ALL_CALLS';
    const COMPLIANCE_ABANDON_RATE_DENOMINATOR_CALLS_THAT_REACHED_QUEUE = 'CALLS_THAT_REACHED_QUEUE';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getComplianceAbandonRateDenominatorAllowableValues()
    {
        return [
            self::COMPLIANCE_ABANDON_RATE_DENOMINATOR_ALL_CALLS,
            self::COMPLIANCE_ABANDON_RATE_DENOMINATOR_CALLS_THAT_REACHED_QUEUE,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['dateCreated'] = isset($data['dateCreated']) ? $data['dateCreated'] : null;
        $this->container['dateModified'] = isset($data['dateModified']) ? $data['dateModified'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['maxCallsPerAgent'] = isset($data['maxCallsPerAgent']) ? $data['maxCallsPerAgent'] : null;
        $this->container['maxConfigurableCallsPerAgent'] = isset($data['maxConfigurableCallsPerAgent']) ? $data['maxConfigurableCallsPerAgent'] : null;
        $this->container['maxLineUtilization'] = isset($data['maxLineUtilization']) ? $data['maxLineUtilization'] : null;
        $this->container['abandonSeconds'] = isset($data['abandonSeconds']) ? $data['abandonSeconds'] : null;
        $this->container['complianceAbandonRateDenominator'] = isset($data['complianceAbandonRateDenominator']) ? $data['complianceAbandonRateDenominator'] : null;
        $this->container['selfUri'] = isset($data['selfUri']) ? $data['selfUri'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getComplianceAbandonRateDenominatorAllowableValues();
        if (!is_null($this->container['complianceAbandonRateDenominator']) && !in_array($this->container['complianceAbandonRateDenominator'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'complianceAbandonRateDenominator', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id The globally unique identifier for the object.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets dateCreated
     *
     * @return \DateTime
     */
    public function getDateCreated()
    {
        return $this->container['dateCreated'];
    }

    /**
     * Sets dateCreated
     *
     * @param \DateTime $dateCreated Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setDateCreated($dateCreated)
    {
        $this->container['dateCreated'] = $dateCreated;

        return $this;
    }

    /**
     * Gets dateModified
     *
     * @return \DateTime
     */
    public function getDateModified()
    {
        return $this->container['dateModified'];
    }

    /**
     * Sets dateModified
     *
     * @param \DateTime $dateModified Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setDateModified($dateModified)
    {
        $this->container['dateModified'] = $dateModified;

        return $this;
    }

    /**
     * Gets version
     *
     * @return int
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param int $version Required for updates, must match the version number of the most recent update
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets maxCallsPerAgent
     *
     * @return int
     */
    public function getMaxCallsPerAgent()
    {
        return $this->container['maxCallsPerAgent'];
    }

    /**
     * Sets maxCallsPerAgent
     *
     * @param int $maxCallsPerAgent The maximum number of calls that can be placed per agent on any campaign
     *
     * @return $this
     */
    public function setMaxCallsPerAgent($maxCallsPerAgent)
    {
        $this->container['maxCallsPerAgent'] = $maxCallsPerAgent;

        return $this;
    }

    /**
     * Gets maxConfigurableCallsPerAgent
     *
     * @return int
     */
    public function getMaxConfigurableCallsPerAgent()
    {
        return $this->container['maxConfigurableCallsPerAgent'];
    }

    /**
     * Sets maxConfigurableCallsPerAgent
     *
     * @param int $maxConfigurableCallsPerAgent The maximum number of calls that can be configured to be placed per agent on any campaign
     *
     * @return $this
     */
    public function setMaxConfigurableCallsPerAgent($maxConfigurableCallsPerAgent)
    {
        $this->container['maxConfigurableCallsPerAgent'] = $maxConfigurableCallsPerAgent;

        return $this;
    }

    /**
     * Gets maxLineUtilization
     *
     * @return double
     */
    public function getMaxLineUtilization()
    {
        return $this->container['maxLineUtilization'];
    }

    /**
     * Sets maxLineUtilization
     *
     * @param double $maxLineUtilization The maximum percentage of lines that should be used for Outbound, expressed as a decimal in the range [0.0, 1.0]
     *
     * @return $this
     */
    public function setMaxLineUtilization($maxLineUtilization)
    {
        $this->container['maxLineUtilization'] = $maxLineUtilization;

        return $this;
    }

    /**
     * Gets abandonSeconds
     *
     * @return double
     */
    public function getAbandonSeconds()
    {
        return $this->container['abandonSeconds'];
    }

    /**
     * Sets abandonSeconds
     *
     * @param double $abandonSeconds The number of seconds used to determine if a call is abandoned
     *
     * @return $this
     */
    public function setAbandonSeconds($abandonSeconds)
    {
        $this->container['abandonSeconds'] = $abandonSeconds;

        return $this;
    }

    /**
     * Gets complianceAbandonRateDenominator
     *
     * @return string
     */
    public function getComplianceAbandonRateDenominator()
    {
        return $this->container['complianceAbandonRateDenominator'];
    }

    /**
     * Sets complianceAbandonRateDenominator
     *
     * @param string $complianceAbandonRateDenominator The denominator to be used in determining the compliance abandon rate
     *
     * @return $this
     */
    public function setComplianceAbandonRateDenominator($complianceAbandonRateDenominator)
    {
        $allowedValues = $this->getComplianceAbandonRateDenominatorAllowableValues();
        if (!is_null($complianceAbandonRateDenominator) && !in_array($complianceAbandonRateDenominator, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'complianceAbandonRateDenominator', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['complianceAbandonRateDenominator'] = $complianceAbandonRateDenominator;

        return $this;
    }

    /**
     * Gets selfUri
     *
     * @return string
     */
    public function getSelfUri()
    {
        return $this->container['selfUri'];
    }

    /**
     * Sets selfUri
     *
     * @param string $selfUri The URI for this object
     *
     * @return $this
     */
    public function setSelfUri($selfUri)
    {
        $this->container['selfUri'] = $selfUri;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


