<?php
/**
 * TimeOffRequestResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * OpenAPI spec version: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PureCloudPlatform\Client\V2\Model;

use \ArrayAccess;
use \PureCloudPlatform\Client\V2\ObjectSerializer;

/**
 * TimeOffRequestResponse Class Doc Comment
 *
 * @category Class
 * @package  PureCloudPlatform\Client\V2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TimeOffRequestResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TimeOffRequestResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'user' => '\PureCloudPlatform\Client\V2\Model\User',
        'isFullDayRequest' => 'bool',
        'markedAsRead' => 'bool',
        'activityCodeId' => 'string',
        'status' => 'string',
        'partialDayStartDateTimes' => '\DateTime[]',
        'fullDayManagementUnitDates' => 'string[]',
        'dailyDurationMinutes' => 'int',
        'notes' => 'string',
        'submittedBy' => '\PureCloudPlatform\Client\V2\Model\User',
        'submittedDate' => '\DateTime',
        'reviewedBy' => '\PureCloudPlatform\Client\V2\Model\User',
        'reviewedDate' => '\DateTime',
        'modifiedBy' => '\PureCloudPlatform\Client\V2\Model\UserReference',
        'modifiedDate' => '\DateTime',
        'metadata' => '\PureCloudPlatform\Client\V2\Model\WfmVersionedEntityMetadata',
        'selfUri' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'user' => null,
        'isFullDayRequest' => null,
        'markedAsRead' => null,
        'activityCodeId' => null,
        'status' => null,
        'partialDayStartDateTimes' => 'date-time',
        'fullDayManagementUnitDates' => null,
        'dailyDurationMinutes' => 'int32',
        'notes' => null,
        'submittedBy' => null,
        'submittedDate' => 'date-time',
        'reviewedBy' => null,
        'reviewedDate' => 'date-time',
        'modifiedBy' => null,
        'modifiedDate' => 'date-time',
        'metadata' => null,
        'selfUri' => 'uri'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'user' => 'user',
        'isFullDayRequest' => 'isFullDayRequest',
        'markedAsRead' => 'markedAsRead',
        'activityCodeId' => 'activityCodeId',
        'status' => 'status',
        'partialDayStartDateTimes' => 'partialDayStartDateTimes',
        'fullDayManagementUnitDates' => 'fullDayManagementUnitDates',
        'dailyDurationMinutes' => 'dailyDurationMinutes',
        'notes' => 'notes',
        'submittedBy' => 'submittedBy',
        'submittedDate' => 'submittedDate',
        'reviewedBy' => 'reviewedBy',
        'reviewedDate' => 'reviewedDate',
        'modifiedBy' => 'modifiedBy',
        'modifiedDate' => 'modifiedDate',
        'metadata' => 'metadata',
        'selfUri' => 'selfUri'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'user' => 'setUser',
        'isFullDayRequest' => 'setIsFullDayRequest',
        'markedAsRead' => 'setMarkedAsRead',
        'activityCodeId' => 'setActivityCodeId',
        'status' => 'setStatus',
        'partialDayStartDateTimes' => 'setPartialDayStartDateTimes',
        'fullDayManagementUnitDates' => 'setFullDayManagementUnitDates',
        'dailyDurationMinutes' => 'setDailyDurationMinutes',
        'notes' => 'setNotes',
        'submittedBy' => 'setSubmittedBy',
        'submittedDate' => 'setSubmittedDate',
        'reviewedBy' => 'setReviewedBy',
        'reviewedDate' => 'setReviewedDate',
        'modifiedBy' => 'setModifiedBy',
        'modifiedDate' => 'setModifiedDate',
        'metadata' => 'setMetadata',
        'selfUri' => 'setSelfUri'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'user' => 'getUser',
        'isFullDayRequest' => 'getIsFullDayRequest',
        'markedAsRead' => 'getMarkedAsRead',
        'activityCodeId' => 'getActivityCodeId',
        'status' => 'getStatus',
        'partialDayStartDateTimes' => 'getPartialDayStartDateTimes',
        'fullDayManagementUnitDates' => 'getFullDayManagementUnitDates',
        'dailyDurationMinutes' => 'getDailyDurationMinutes',
        'notes' => 'getNotes',
        'submittedBy' => 'getSubmittedBy',
        'submittedDate' => 'getSubmittedDate',
        'reviewedBy' => 'getReviewedBy',
        'reviewedDate' => 'getReviewedDate',
        'modifiedBy' => 'getModifiedBy',
        'modifiedDate' => 'getModifiedDate',
        'metadata' => 'getMetadata',
        'selfUri' => 'getSelfUri'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const STATUS_PENDING = 'PENDING';
    const STATUS_APPROVED = 'APPROVED';
    const STATUS_DENIED = 'DENIED';
    const STATUS_CANCELED = 'CANCELED';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_PENDING,
            self::STATUS_APPROVED,
            self::STATUS_DENIED,
            self::STATUS_CANCELED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['user'] = isset($data['user']) ? $data['user'] : null;
        $this->container['isFullDayRequest'] = isset($data['isFullDayRequest']) ? $data['isFullDayRequest'] : null;
        $this->container['markedAsRead'] = isset($data['markedAsRead']) ? $data['markedAsRead'] : null;
        $this->container['activityCodeId'] = isset($data['activityCodeId']) ? $data['activityCodeId'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['partialDayStartDateTimes'] = isset($data['partialDayStartDateTimes']) ? $data['partialDayStartDateTimes'] : null;
        $this->container['fullDayManagementUnitDates'] = isset($data['fullDayManagementUnitDates']) ? $data['fullDayManagementUnitDates'] : null;
        $this->container['dailyDurationMinutes'] = isset($data['dailyDurationMinutes']) ? $data['dailyDurationMinutes'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['submittedBy'] = isset($data['submittedBy']) ? $data['submittedBy'] : null;
        $this->container['submittedDate'] = isset($data['submittedDate']) ? $data['submittedDate'] : null;
        $this->container['reviewedBy'] = isset($data['reviewedBy']) ? $data['reviewedBy'] : null;
        $this->container['reviewedDate'] = isset($data['reviewedDate']) ? $data['reviewedDate'] : null;
        $this->container['modifiedBy'] = isset($data['modifiedBy']) ? $data['modifiedBy'] : null;
        $this->container['modifiedDate'] = isset($data['modifiedDate']) ? $data['modifiedDate'] : null;
        $this->container['metadata'] = isset($data['metadata']) ? $data['metadata'] : null;
        $this->container['selfUri'] = isset($data['selfUri']) ? $data['selfUri'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($this->container['status']) && !in_array($this->container['status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id The globally unique identifier for the object.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets user
     *
     * @return \PureCloudPlatform\Client\V2\Model\User
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param \PureCloudPlatform\Client\V2\Model\User $user The user associated with this time off request
     *
     * @return $this
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets isFullDayRequest
     *
     * @return bool
     */
    public function getIsFullDayRequest()
    {
        return $this->container['isFullDayRequest'];
    }

    /**
     * Sets isFullDayRequest
     *
     * @param bool $isFullDayRequest Whether this is a full day request (false means partial day)
     *
     * @return $this
     */
    public function setIsFullDayRequest($isFullDayRequest)
    {
        $this->container['isFullDayRequest'] = $isFullDayRequest;

        return $this;
    }

    /**
     * Gets markedAsRead
     *
     * @return bool
     */
    public function getMarkedAsRead()
    {
        return $this->container['markedAsRead'];
    }

    /**
     * Sets markedAsRead
     *
     * @param bool $markedAsRead Whether this request has been marked as read by the agent
     *
     * @return $this
     */
    public function setMarkedAsRead($markedAsRead)
    {
        $this->container['markedAsRead'] = $markedAsRead;

        return $this;
    }

    /**
     * Gets activityCodeId
     *
     * @return string
     */
    public function getActivityCodeId()
    {
        return $this->container['activityCodeId'];
    }

    /**
     * Sets activityCodeId
     *
     * @param string $activityCodeId The ID of the activity code associated with this time off request. Activity code must be of the TimeOff category
     *
     * @return $this
     */
    public function setActivityCodeId($activityCodeId)
    {
        $this->container['activityCodeId'] = $activityCodeId;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status The status of this time off request
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($status) && !in_array($status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets partialDayStartDateTimes
     *
     * @return \DateTime[]
     */
    public function getPartialDayStartDateTimes()
    {
        return $this->container['partialDayStartDateTimes'];
    }

    /**
     * Sets partialDayStartDateTimes
     *
     * @param \DateTime[] $partialDayStartDateTimes A set of start date-times in ISO-8601 format for partial day requests.  Will be not empty if isFullDayRequest == false
     *
     * @return $this
     */
    public function setPartialDayStartDateTimes($partialDayStartDateTimes)
    {
        $this->container['partialDayStartDateTimes'] = $partialDayStartDateTimes;

        return $this;
    }

    /**
     * Gets fullDayManagementUnitDates
     *
     * @return string[]
     */
    public function getFullDayManagementUnitDates()
    {
        return $this->container['fullDayManagementUnitDates'];
    }

    /**
     * Sets fullDayManagementUnitDates
     *
     * @param string[] $fullDayManagementUnitDates A set of dates in yyyy-MM-dd format.  Should be interpreted in the management unit's configured time zone.  Will be not empty if isFullDayRequest == true
     *
     * @return $this
     */
    public function setFullDayManagementUnitDates($fullDayManagementUnitDates)
    {
        $this->container['fullDayManagementUnitDates'] = $fullDayManagementUnitDates;

        return $this;
    }

    /**
     * Gets dailyDurationMinutes
     *
     * @return int
     */
    public function getDailyDurationMinutes()
    {
        return $this->container['dailyDurationMinutes'];
    }

    /**
     * Sets dailyDurationMinutes
     *
     * @param int $dailyDurationMinutes The daily duration of this time off request in minutes
     *
     * @return $this
     */
    public function setDailyDurationMinutes($dailyDurationMinutes)
    {
        $this->container['dailyDurationMinutes'] = $dailyDurationMinutes;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes Notes about the time off request
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets submittedBy
     *
     * @return \PureCloudPlatform\Client\V2\Model\User
     */
    public function getSubmittedBy()
    {
        return $this->container['submittedBy'];
    }

    /**
     * Sets submittedBy
     *
     * @param \PureCloudPlatform\Client\V2\Model\User $submittedBy The user who submitted this time off request
     *
     * @return $this
     */
    public function setSubmittedBy($submittedBy)
    {
        $this->container['submittedBy'] = $submittedBy;

        return $this;
    }

    /**
     * Gets submittedDate
     *
     * @return \DateTime
     */
    public function getSubmittedDate()
    {
        return $this->container['submittedDate'];
    }

    /**
     * Sets submittedDate
     *
     * @param \DateTime $submittedDate The timestamp when this request was submitted. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setSubmittedDate($submittedDate)
    {
        $this->container['submittedDate'] = $submittedDate;

        return $this;
    }

    /**
     * Gets reviewedBy
     *
     * @return \PureCloudPlatform\Client\V2\Model\User
     */
    public function getReviewedBy()
    {
        return $this->container['reviewedBy'];
    }

    /**
     * Sets reviewedBy
     *
     * @param \PureCloudPlatform\Client\V2\Model\User $reviewedBy The user who reviewed this time off request
     *
     * @return $this
     */
    public function setReviewedBy($reviewedBy)
    {
        $this->container['reviewedBy'] = $reviewedBy;

        return $this;
    }

    /**
     * Gets reviewedDate
     *
     * @return \DateTime
     */
    public function getReviewedDate()
    {
        return $this->container['reviewedDate'];
    }

    /**
     * Sets reviewedDate
     *
     * @param \DateTime $reviewedDate The timestamp when this request was reviewed. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setReviewedDate($reviewedDate)
    {
        $this->container['reviewedDate'] = $reviewedDate;

        return $this;
    }

    /**
     * Gets modifiedBy
     *
     * @return \PureCloudPlatform\Client\V2\Model\UserReference
     */
    public function getModifiedBy()
    {
        return $this->container['modifiedBy'];
    }

    /**
     * Sets modifiedBy
     *
     * @param \PureCloudPlatform\Client\V2\Model\UserReference $modifiedBy The user who last modified this TimeOffRequestResponse
     *
     * @return $this
     */
    public function setModifiedBy($modifiedBy)
    {
        $this->container['modifiedBy'] = $modifiedBy;

        return $this;
    }

    /**
     * Gets modifiedDate
     *
     * @return \DateTime
     */
    public function getModifiedDate()
    {
        return $this->container['modifiedDate'];
    }

    /**
     * Sets modifiedDate
     *
     * @param \DateTime $modifiedDate The timestamp when this request was last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
     *
     * @return $this
     */
    public function setModifiedDate($modifiedDate)
    {
        $this->container['modifiedDate'] = $modifiedDate;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return \PureCloudPlatform\Client\V2\Model\WfmVersionedEntityMetadata
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param \PureCloudPlatform\Client\V2\Model\WfmVersionedEntityMetadata $metadata The version metadata of the time off request
     *
     * @return $this
     */
    public function setMetadata($metadata)
    {
        $this->container['metadata'] = $metadata;

        return $this;
    }

    /**
     * Gets selfUri
     *
     * @return string
     */
    public function getSelfUri()
    {
        return $this->container['selfUri'];
    }

    /**
     * Sets selfUri
     *
     * @param string $selfUri The URI for this object
     *
     * @return $this
     */
    public function setSelfUri($selfUri)
    {
        $this->container['selfUri'] = $selfUri;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


